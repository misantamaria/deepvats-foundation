# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_load.ipynb (unless otherwise specified).

__all__ = ['load_numeric_vars']

# Cell
import pandas as pd

# Cell
def load_numeric_vars(fp, cname_ts='description', normalize=True, nan_replacement=0):
    "Load, from the filepath `fp`, a dataframe containing the numeric variables from a longwall. Each column \
    is expected to have values of a variable in form of a time series, whose index will be described in the \
    column named `cname_ts`. The timestamp column will be renamed to 'timestamp'.NaN values will be \
    replaced by a constant value `nan_replacement`"
    data = pd.read_csv(fp, sep=';', skiprows=2)
    data['timestamp'] = pd.to_datetime(data[cname_ts])
    data = data.drop(cname_ts, axis=1)
    df1 = data.select_dtypes(exclude='object')
    df2 = data.select_dtypes(include='object').astype('bool')
    data = pd.concat([df2.reset_index(drop = True), df1], axis = 1)
    data_numeric = data.select_dtypes(include=['float', 'datetime'])
    tmp = data_numeric.select_dtypes(include='float')
    if normalize: data_numeric[data_numeric.select_dtypes(include='float').columns] = (tmp - tmp.min())/(tmp.max()-tmp.min())
    data_numeric = data_numeric.dropna(axis=1, how='all').fillna(nan_replacement)
    return data_numeric