#############################
# JUPYTER VOLUME DOCKERFILE #
#***************************#
# Set up a jupyter-lab for  #
# developing using deepvats #
#############################
##############
# Base image #
##############
##--- Setup Ubuntu
FROM misantamaria/dvats-jupyter:cuda12.2.0-ubuntu20.04-hooks-mplots-zeroshot

#--- Tags
LABEL maintainer="vrodriguezf <victor.rfernandez@upm.es>"
LABEL cuda_version=${CUDA_VERSION}

##---Initialize bash
SHELL [ "/bin/bash", "--login", "-c" ]  
#--- DEBUG
RUN conda list -n env moment && sleep 3

#-- Environmental variables for wandb
ENV LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    CONDA_ENV=env \
    PATH=/usr/local/share/miniconda3/bin:/usr/local/share/miniconda3/envs/env/bin:$PATH

#-- Octave GUI - Using interactive Octave plots
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    xvfb \
    x11-xserver-utils \
    gnuplot \
    && rm -rf /var/lib/apt/lists/*

########################
# Create non-root user #
########################
ARG username=user\
    uid=1000 \
    gid=1000
ENV USER=$username \
    UID=$uid \
    GID=$gid 
ENV HOME=/home/$USER

#-- Passwordless sudo (TODO: mv to root section)
RUN addgroup --gid ${GID} ${USER}  \
    && adduser --disabled-password \
    --gecos "Non-root user" \
    --uid ${UID} \
    --gid ${GID} \
    --home ${HOME} ${USER}\
    && echo "$USER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Switch to non-root user
USER ${USER}
WORKDIR ${HOME}

#############################
# Verify conda environment  #
#############################
# Ensure the environment exists and the library "momentfm" is installed
RUN conda info --envs && \
    conda run -n ${CONDA_ENV} conda list momentfm

# Add the jupyterlab settings
COPY --chown=$UID:$GID docker/jupyter_config $HOME/.jupyter

#########################
# Ensure conda for user #
#########################

RUN echo "--> Activating conda"
# Make conda activate command available from bash
RUN conda init bash \
    && echo "conda activate ${CONDA_ENV}" >> ~/.bashrc

# Ensure the project directory exists
RUN mkdir -p $HOME/work \
    && chown ${USER}:${USER} $HOME/work

# Add entrypoint script
COPY --chown=$UID:$GID docker/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

##############################
# Install additional tools   #
##############################
USER root
#--- por algún problema está fallando tslearn. Arreglar por qué no lo pilla en environment.yml
RUN pip install aeon \
    && conda run -n ${CONDA_ENV} conda install -y -c conda-forge ruptures tslearn
#RUN pip install tslearn
USER ${USER}
RUN conda run -n ${CONDA_ENV} conda list momentfm && sleep 3
RUN pip install tslearn
# Copy project files into the work directory
COPY --chown=$UID:$GID ./ $HOME/work
#--- Ensure data dir
RUN mkdir $HOME/data

##############################
# Start JupyterLab           #
##############################
ARG JUPYTER_TOKEN
ENV JUPYTER_TOKEN=${JUPYTER_TOKEN}


#--- DEBUG
RUN conda list -n env moment && sleep 3


CMD [\
    "sh", "-c", \
    "xvfb-run -a jupyter lab \
    --no-browser \
    --ip 0.0.0.0 \  
    --ContentsManager.allow_hidden=True \
    --NotebookApp.token=$JUPYTER_TOKEN"\
    ]
