[8] [ --> _set_encoder ]
[8]  [ _set_encoder ] About to exec _set_enc_input
[8] [ --> _set_enc_input ]
[8]  [ _set_enc_input ] is none enc_input? True
[8]  [ _set_enc_input ] About to get the windows
[8] [ --> windowed_dataset ]
[8]  [ _set_enc_input ] X is a DataFrame, X~(440, 1) | window_sizes 1, n_window_sizes 5
[8]  [ _set_enc_input ] X is a DataFrame | Selecting Fourier's dominant frequences
[8] [ --> Find_dominant_window_sizes_list ]
[8]  [ Find_dominant_window_sizes_list ] X ~ (440, 1)
[8]  [ Find_dominant_window_sizes_list ] Get sizes for var 0
[8] [ --> find_dominant_window_sizes_list_single ]
[8]  [ find_dominant_window_sizes_list_single ] X ~ (440,)
[8]  [ find_dominant_window_sizes_list_single ] Looking for - at most - the best 5 window sizes
[8]  [ find_dominant_window_sizes_list_single ] Offset 0.05 max size: 22.0
[8]  [ find_dominant_window_sizes_list_single ] --> Freqs
[8]  [ find_dominant_window_sizes_list_single ] Freqs [ 0.          0.00227273  0.00454545  0.00681818  0.00909091  0.01136364
  0.01363636  0.01590909  0.01818182  0.02045455  0.02272727  0.025
  0.02727273  0.02954545  0.03181818  0.03409091  0.03636364  0.03863636
  0.04090909  0.04318182  0.04545455  0.04772727  0.05        0.05227273
  0.05454545  0.05681818  0.05909091  0.06136364  0.06363636  0.06590909
  0.06818182  0.07045455  0.07272727  0.075       0.07727273  0.07954545
  0.08181818  0.08409091  0.08636364  0.08863636  0.09090909  0.09318182
  0.09545455  0.09772727  0.1         0.10227273  0.10454545  0.10681818
  0.10909091  0.11136364  0.11363636  0.11590909  0.11818182  0.12045455
  0.12272727  0.125       0.12727273  0.12954545  0.13181818  0.13409091
  0.13636364  0.13863636  0.14090909  0.14318182  0.14545455  0.14772727
  0.15        0.15227273  0.15454545  0.15681818  0.15909091  0.16136364
  0.16363636  0.16590909  0.16818182  0.17045455  0.17272727  0.175
  0.17727273  0.17954545  0.18181818  0.18409091  0.18636364  0.18863636
  0.19090909  0.19318182  0.19545455  0.19772727  0.2         0.20227273
  0.20454545  0.20681818  0.20909091  0.21136364  0.21363636  0.21590909
  0.21818182  0.22045455  0.22272727  0.225       0.22727273  0.22954545
  0.23181818  0.23409091  0.23636364  0.23863636  0.24090909  0.24318182
  0.24545455  0.24772727  0.25        0.25227273  0.25454545  0.25681818
  0.25909091  0.26136364  0.26363636  0.26590909  0.26818182  0.27045455
  0.27272727  0.275       0.27727273  0.27954545  0.28181818  0.28409091
  0.28636364  0.28863636  0.29090909  0.29318182  0.29545455  0.29772727
  0.3         0.30227273  0.30454545  0.30681818  0.30909091  0.31136364
  0.31363636  0.31590909  0.31818182  0.32045455  0.32272727  0.325
  0.32727273  0.32954545  0.33181818  0.33409091  0.33636364  0.33863636
  0.34090909  0.34318182  0.34545455  0.34772727  0.35        0.35227273
  0.35454545  0.35681818  0.35909091  0.36136364  0.36363636  0.36590909
  0.36818182  0.37045455  0.37272727  0.375       0.37727273  0.37954545
  0.38181818  0.38409091  0.38636364  0.38863636  0.39090909  0.39318182
  0.39545455  0.39772727  0.4         0.40227273  0.40454545  0.40681818
  0.40909091  0.41136364  0.41363636  0.41590909  0.41818182  0.42045455
  0.42272727  0.425       0.42727273  0.42954545  0.43181818  0.43409091
  0.43636364  0.43863636  0.44090909  0.44318182  0.44545455  0.44772727
  0.45        0.45227273  0.45454545  0.45681818  0.45909091  0.46136364
  0.46363636  0.46590909  0.46818182  0.47045455  0.47272727  0.475
  0.47727273  0.47954545  0.48181818  0.48409091  0.48636364  0.48863636
  0.49090909  0.49318182  0.49545455  0.49772727 -0.5        -0.49772727
 -0.49545455 -0.49318182 -0.49090909 -0.48863636 -0.48636364 -0.48409091
 -0.48181818 -0.47954545 -0.47727273 -0.475      -0.47272727 -0.47045455
 -0.46818182 -0.46590909 -0.46363636 -0.46136364 -0.45909091 -0.45681818
 -0.45454545 -0.45227273 -0.45       -0.44772727 -0.44545455 -0.44318182
 -0.44090909 -0.43863636 -0.43636364 -0.43409091 -0.43181818 -0.42954545
 -0.42727273 -0.425      -0.42272727 -0.42045455 -0.41818182 -0.41590909
 -0.41363636 -0.41136364 -0.40909091 -0.40681818 -0.40454545 -0.40227273
 -0.4        -0.39772727 -0.39545455 -0.39318182 -0.39090909 -0.38863636
 -0.38636364 -0.38409091 -0.38181818 -0.37954545 -0.37727273 -0.375
 -0.37272727 -0.37045455 -0.36818182 -0.36590909 -0.36363636 -0.36136364
 -0.35909091 -0.35681818 -0.35454545 -0.35227273 -0.35       -0.34772727
 -0.34545455 -0.34318182 -0.34090909 -0.33863636 -0.33636364 -0.33409091
 -0.33181818 -0.32954545 -0.32727273 -0.325      -0.32272727 -0.32045455
 -0.31818182 -0.31590909 -0.31363636 -0.31136364 -0.30909091 -0.30681818
 -0.30454545 -0.30227273 -0.3        -0.29772727 -0.29545455 -0.29318182
 -0.29090909 -0.28863636 -0.28636364 -0.28409091 -0.28181818 -0.27954545
 -0.27727273 -0.275      -0.27272727 -0.27045455 -0.26818182 -0.26590909
 -0.26363636 -0.26136364 -0.25909091 -0.25681818 -0.25454545 -0.25227273
 -0.25       -0.24772727 -0.24545455 -0.24318182 -0.24090909 -0.23863636
 -0.23636364 -0.23409091 -0.23181818 -0.22954545 -0.22727273 -0.225
 -0.22272727 -0.22045455 -0.21818182 -0.21590909 -0.21363636 -0.21136364
 -0.20909091 -0.20681818 -0.20454545 -0.20227273 -0.2        -0.19772727
 -0.19545455 -0.19318182 -0.19090909 -0.18863636 -0.18636364 -0.18409091
 -0.18181818 -0.17954545 -0.17727273 -0.175      -0.17272727 -0.17045455
 -0.16818182 -0.16590909 -0.16363636 -0.16136364 -0.15909091 -0.15681818
 -0.15454545 -0.15227273 -0.15       -0.14772727 -0.14545455 -0.14318182
 -0.14090909 -0.13863636 -0.13636364 -0.13409091 -0.13181818 -0.12954545
 -0.12727273 -0.125      -0.12272727 -0.12045455 -0.11818182 -0.11590909
 -0.11363636 -0.11136364 -0.10909091 -0.10681818 -0.10454545 -0.10227273
 -0.1        -0.09772727 -0.09545455 -0.09318182 -0.09090909 -0.08863636
 -0.08636364 -0.08409091 -0.08181818 -0.07954545 -0.07727273 -0.075
 -0.07272727 -0.07045455 -0.06818182 -0.06590909 -0.06363636 -0.06136364
 -0.05909091 -0.05681818 -0.05454545 -0.05227273 -0.05       -0.04772727
 -0.04545455 -0.04318182 -0.04090909 -0.03863636 -0.03636364 -0.03409091
 -0.03181818 -0.02954545 -0.02727273 -0.025      -0.02272727 -0.02045455
 -0.01818182 -0.01590909 -0.01363636 -0.01136364 -0.00909091 -0.00681818
 -0.00454545 -0.00227273] -->
[8]  [ find_dominant_window_sizes_list_single ] coefs [7.05208450e+01 2.17522066e+01 1.51117073e+01 1.08917429e+01
 7.98043598e+00 4.85509881e+00 5.08770649e+00 4.61865603e+00
 1.05418881e+01 4.14979431e+00 4.76953214e-01 5.86317778e-01
 7.18337760e-01 1.07780909e+00 2.35498782e-01 7.20215333e-01
 1.96347247e+00 9.38784226e+00 2.99297830e+00 2.08189696e+00
 2.49385046e+00 1.71487275e+00 1.94407839e+00 1.96098531e+00
 1.89724827e+00 8.15590795e+00 3.52111673e+00 8.99907928e-01
 1.06066847e+00 8.28651027e-01 7.64079256e-01 9.36246469e-01
 5.81945408e-01 2.59914187e+00 5.88234408e+00 1.81839487e+00
 1.61762788e+00 1.39577649e+00 1.43216216e+00 1.49479629e+00
 1.19792146e+00 1.31164524e+00 3.67380021e+00 1.11452862e+00
 4.83337162e-01 1.82045706e-01 2.51375542e-01 8.59942592e-02
 5.14102525e-01 3.07583414e-01 7.76624319e-01 2.75514067e+00
 1.37824354e+00 1.46632219e-01 8.67086600e-01 5.33131622e-01
 5.37527585e-01 3.35078734e-01 3.15423069e-01 5.14284786e-01
 9.10117190e-01 7.90460275e-01 4.32711634e-01 3.93838231e-01
 4.18690901e-01 4.23629859e-01 7.50179324e-01 1.13851179e+00
 6.40861403e-01 1.26757880e-01 3.62668541e-01 1.03689586e-01
 4.53112006e-01 3.77366888e-01 8.20368247e-02 4.02314524e-01
 1.43060549e+00 5.70117079e-01 5.80550972e-01 2.43891425e-01
 5.09424523e-01 3.41242063e-01 5.75738081e-01 5.46758534e-01
 1.61731453e+00 1.83306734e-01 4.29781084e-01 1.72372519e-01
 9.96824171e-02 6.16629699e-02 3.83731539e-01 1.94739951e-01
 1.05264356e+00 2.19393275e+00 9.63156393e-01 6.26881821e-01
 5.32550231e-01 6.29025335e-01 6.22641311e-01 5.86583104e-01
 4.87077570e-01 1.32796671e+00 3.82040960e-01 4.77883625e-01
 1.24875209e-01 2.62341193e-01 1.43642833e-01 3.16621068e-01
 2.30396944e-01 1.27399937e+00 1.96126638e+00 1.19371022e+00
 8.59447880e-01 7.97778595e-01 5.27269828e-01 3.98809808e-01
 4.32951835e-01 7.52366345e-01 1.93323776e+00 7.28311360e-01
 4.15258679e-01 1.40513014e-01 3.91111899e-01 1.09665817e-01
 5.06474122e-01 2.67548244e-01 7.78454603e-01 1.28718009e+00
 9.37300430e-01 1.74514937e-01 4.80464220e-01 1.46025905e-01
 3.35117279e-01 1.05098177e-01 6.42178473e-01 4.91593538e-01
 1.83137275e-01 5.87990897e-01 9.85901654e-02 3.78025387e-01
 1.71697441e-01 5.45500234e-01 4.62014884e-01 8.06124751e-01
 6.32469073e-01 3.20604343e-01 3.13630825e-01 7.09827408e-01
 2.42198416e-01 4.83588209e-01 1.78252899e-01 4.82234424e-01
 2.84326895e-01 3.58662760e-01 5.60258251e-01 1.49563774e-01
 3.85001188e-01 1.86587731e-01 6.02123474e-01 1.71488932e-01
 9.20529001e-01 5.86678171e-01 4.16942363e-01 1.20759219e-01
 2.03270008e-01 2.56957857e-01 4.97482399e-01 2.21753783e-01
 7.77688688e-01 9.70753417e-01 9.64500032e-01 5.24903110e-01
 2.37929172e-01 2.68556750e-01 2.81549865e-01 4.23825895e-01
 7.07139444e-01 1.40628665e+00 7.23895052e-01 2.87939965e-01
 1.70589963e-01 1.86167939e-01 1.24306854e-01 4.02796030e-01
 3.43824952e-01 7.82722618e-01 9.60348143e-01 9.03734349e-01
 2.05860795e-01 5.30708958e-01 3.87088594e-01 3.65813128e-01
 3.92789116e-01 7.51960126e-01 9.55793288e-01 6.46895798e-01
 6.06062984e-01 1.06755334e-01 3.46925168e-01 1.18433818e-01
 4.65098476e-01 4.01014572e-01 3.82187726e-01 3.89927607e-01
 6.39409585e-01 1.16398430e-01 5.37536982e-01 2.60664188e-01
 5.94530536e-01 3.42324045e-01 5.92096914e-01 6.69123580e-01
 3.82960792e-01 3.88082937e-01 3.15541249e-01 5.47114371e-01
 1.58975566e-01 3.59959298e-01 3.04271830e-01 4.07639725e-01
 3.33335000e-01 4.07639725e-01 3.04271830e-01 3.59959298e-01
 1.58975566e-01 5.47114371e-01 3.15541249e-01 3.88082937e-01
 3.82960792e-01 6.69123580e-01 5.92096914e-01 3.42324045e-01
 5.94530536e-01 2.60664188e-01 5.37536982e-01 1.16398430e-01
 6.39409585e-01 3.89927607e-01 3.82187726e-01 4.01014572e-01
 4.65098476e-01 1.18433818e-01 3.46925168e-01 1.06755334e-01
 6.06062984e-01 6.46895798e-01 9.55793288e-01 7.51960126e-01
 3.92789116e-01 3.65813128e-01 3.87088594e-01 5.30708958e-01
 2.05860795e-01 9.03734349e-01 9.60348143e-01 7.82722618e-01
 3.43824952e-01 4.02796030e-01 1.24306854e-01 1.86167939e-01
 1.70589963e-01 2.87939965e-01 7.23895052e-01 1.40628665e+00
 7.07139444e-01 4.23825895e-01 2.81549865e-01 2.68556750e-01
 2.37929172e-01 5.24903110e-01 9.64500032e-01 9.70753417e-01
 7.77688688e-01 2.21753783e-01 4.97482399e-01 2.56957857e-01
 2.03270008e-01 1.20759219e-01 4.16942363e-01 5.86678171e-01
 9.20529001e-01 1.71488932e-01 6.02123474e-01 1.86587731e-01
 3.85001188e-01 1.49563774e-01 5.60258251e-01 3.58662760e-01
 2.84326895e-01 4.82234424e-01 1.78252899e-01 4.83588209e-01
 2.42198416e-01 7.09827408e-01 3.13630825e-01 3.20604343e-01
 6.32469073e-01 8.06124751e-01 4.62014884e-01 5.45500234e-01
 1.71697441e-01 3.78025387e-01 9.85901654e-02 5.87990897e-01
 1.83137275e-01 4.91593538e-01 6.42178473e-01 1.05098177e-01
 3.35117279e-01 1.46025905e-01 4.80464220e-01 1.74514937e-01
 9.37300430e-01 1.28718009e+00 7.78454603e-01 2.67548244e-01
 5.06474122e-01 1.09665817e-01 3.91111899e-01 1.40513014e-01
 4.15258679e-01 7.28311360e-01 1.93323776e+00 7.52366345e-01
 4.32951835e-01 3.98809808e-01 5.27269828e-01 7.97778595e-01
 8.59447880e-01 1.19371022e+00 1.96126638e+00 1.27399937e+00
 2.30396944e-01 3.16621068e-01 1.43642833e-01 2.62341193e-01
 1.24875209e-01 4.77883625e-01 3.82040960e-01 1.32796671e+00
 4.87077570e-01 5.86583104e-01 6.22641311e-01 6.29025335e-01
 5.32550231e-01 6.26881821e-01 9.63156393e-01 2.19393275e+00
 1.05264356e+00 1.94739951e-01 3.83731539e-01 6.16629699e-02
 9.96824171e-02 1.72372519e-01 4.29781084e-01 1.83306734e-01
 1.61731453e+00 5.46758534e-01 5.75738081e-01 3.41242063e-01
 5.09424523e-01 2.43891425e-01 5.80550972e-01 5.70117079e-01
 1.43060549e+00 4.02314524e-01 8.20368247e-02 3.77366888e-01
 4.53112006e-01 1.03689586e-01 3.62668541e-01 1.26757880e-01
 6.40861403e-01 1.13851179e+00 7.50179324e-01 4.23629859e-01
 4.18690901e-01 3.93838231e-01 4.32711634e-01 7.90460275e-01
 9.10117190e-01 5.14284786e-01 3.15423069e-01 3.35078734e-01
 5.37527585e-01 5.33131622e-01 8.67086600e-01 1.46632219e-01
 1.37824354e+00 2.75514067e+00 7.76624319e-01 3.07583414e-01
 5.14102525e-01 8.59942592e-02 2.51375542e-01 1.82045706e-01
 4.83337162e-01 1.11452862e+00 3.67380021e+00 1.31164524e+00
 1.19792146e+00 1.49479629e+00 1.43216216e+00 1.39577649e+00
 1.61762788e+00 1.81839487e+00 5.88234408e+00 2.59914187e+00
 5.81945408e-01 9.36246469e-01 7.64079256e-01 8.28651027e-01
 1.06066847e+00 8.99907928e-01 3.52111673e+00 8.15590795e+00
 1.89724827e+00 1.96098531e+00 1.94407839e+00 1.71487275e+00
 2.49385046e+00 2.08189696e+00 2.99297830e+00 9.38784226e+00
 1.96347247e+00 7.20215333e-01 2.35498782e-01 1.07780909e+00
 7.18337760e-01 5.86317778e-01 4.76953214e-01 4.14979431e+00
 1.05418881e+01 4.61865603e+00 5.08770649e+00 4.85509881e+00
 7.98043598e+00 1.08917429e+01 1.51117073e+01 2.17522066e+01] -->
[8]  [ find_dominant_window_sizes_list_single ] Freqs -->
[8]  [ find_dominant_window_sizes_list_single ] Coefs and window_sizes -->
[8]  [ find_dominant_window_sizes_list_single ] --> Find and return valid window_sizes
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 0 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 1 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 2 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 2b ... 5
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes -->
[8]  [ find_dominant_window_sizes_list_single ] Sizes: [17, 12, 10, 16, 8]
[8] [find_dominant_window_sizes_list_single --> ]
[8]  [ Find_dominant_window_sizes_list ] Get sizes for var 0 | [17, 12, 10, 16, 8]
[8]  [ Find_dominant_window_sizes_list ] Grouping sizes
[8]  [ Find_dominant_window_sizes_list ] Final selected window sizes: [17, 12, 10, 16, 8]
[8] [Find_dominant_window_sizes_list --> ]
[8]  [ windowed_dataset ] X is a DataFrame | Window sizes: 5
[8]  [ windowed_dataset ] Building the windows
[8]  [ windowed_dataset ] w = 8
[8]  [ windowed_dataset ] w 8 | enc_input~(433, 1, 8) | dss~1
[8]  [ windowed_dataset ] w = 10
[8]  [ windowed_dataset ] w 10 | enc_input~(431, 1, 10) | dss~2
[8]  [ windowed_dataset ] w = 12
[8]  [ windowed_dataset ] w 12 | enc_input~(429, 1, 12) | dss~3
[8]  [ windowed_dataset ] w = 16
[8]  [ windowed_dataset ] w 16 | enc_input~(425, 1, 16) | dss~4
[8]  [ windowed_dataset ] w = 17
[8]  [ windowed_dataset ] w 17 | enc_input~(424, 1, 17) | dss~5
[8]  [ windowed_dataset ] Number of windows: 5
[8] [windowed_dataset --> ]
[8]  [ _set_enc_input ] About to get the encoder input | windows~5
[8]  [ _set_enc_input ] Enc input obtained | enc_input~(433, 1, 8)
[8] [_set_encoder --> ]
[8]  [ _set_encoder ] enc_input~(433, 1, 8)
[8]  [ _set_encoder ] About to exec _set_optimizer
[8] [ --> _set_optimizer ]
[8] [_set_encoder --> ]
[8] [_set_encoder --> ]
[8] [ --> set_fine_tune_ ]
[8]  [ set_fine_tune_ ] Model class: momentfm.models.moment.MOMENTPipeline
[8]  [ set_fine_tune_ ] Moment
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [_set_encoder --> ]
[8] [ --> fine_tune ]
[8] [ --> set_fine_tune_ ]
[8]  [ set_fine_tune_ ] Model class: momentfm.models.moment.MOMENTPipeline
[8]  [ set_fine_tune_ ] Moment
[8] [set_fine_tune_ --> ]
[8]  [ set_fine_tune_ ] Use fine_tune_moment parameters
[8] [ --> fine_tune_moment_ ]
[8]  [ set_fine_tune_ ] Processing 5 datasets : (433, 1, 8)
[8]  [ set_fine_tune_ ] Setting up optimizer as AdamW
[8] [91m [ set_fine_tune_ ] Processing wlen 8 | wlens [] | i 1/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (433, 1, 8)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (8, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 130
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 6[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 426[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([130, 1, 8])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 433[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 130 | 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [  6   8  13  14  15  16  17  20  22  28  29  31  34  38  39  40  43  44
  47  49  50  53  55  56  58  59  65  75  83  87  89  90  96  99 103 106
 110 115 117 119 120 121 122 127 130 131 138 141 146 156 158 164 165 167
 175 178 179 181 184 185 187 192 194 202 203 204 207 215 216 224 225 226
 243 246 256 259 260 263 266 268 271 273 276 284 292 293 295 296 299 301
 311 315 316 318 320 324 327 328 331 333 335 341 345 346 348 350 355 356
 367 371 372 373 375 379 380 384 386 394 395 396 401 402 407 410 412 413
 416 420 423 426] for case (8, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 303
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 303[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 302[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([303, 1, 8])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 303[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 303 | 303[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [  6   8  13  14  15  16  17  20  22  28  29  31  34  38  39  40  43  44
  47  49  50  53  55  56  58  59  65  75  83  87  89  90  96  99 103 106
 110 115 117 119 120 121 122 127 130 131 138 141 146 156 158 164 165 167
 175 178 179 181 184 185 187 192 194 202 203 204 207 215 216 224 225 226
 243 246 256 259 260 263 266 268 271 273 276 284 292 293 295 296 299 301
 311 315 316 318 320 324 327 328 331 333 335 341 345 346 348 350 355 356
 367 371 372 373 375 379 380 384 386 394 395 396 401 402 407 410 412 413
 416 420 423 426] for case (8, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 8 | Lengths list: [8]
[8]  [ fine_tune_moment_single_ ] Eval Pre | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0002500377013348043
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0006023791502229869
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00042401935206726193
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0009497191058471799
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0035744672641158104
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0019763458985835314
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001990203745663166
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009214133024215698
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 8]) | batch_masks~torch.Size([2, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 8]) | batch_masks ~ torch.Size([2, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 8]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0009621031349524856
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([2, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.047555224275404, 'rmse': 0.0023509623045145176, 'mae': 0.025167910251408243, 'smape': 0.19016688410493182, 'loss': 0.002215934264111436}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738582272.585915 | End: 1738582277.0964186 | Duration: 4.51 seconds
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 8
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 8])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 19
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 0 | train 0 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.4149953939486295e-05
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 0 | train 0 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 0 | train 1 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10253120958805084
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 0 | train 1 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 0 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0027201157063245773
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 0 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 0 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.127252459526062
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 0 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 0 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08323223888874054
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 0 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 0 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0061256978660821915
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 0 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 0 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20919904112815857
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 0 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 0 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0052350834012031555
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 0 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 0 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17201626300811768
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 0 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 0 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001175557030364871
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 0 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 0 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16545113921165466
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 0 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 0 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.41839599609375
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 0 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 0 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00376536650583148
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 0 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 0 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13554474711418152
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 0 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 0 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004032394848763943
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 0 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 0 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.31029635667800903
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 0 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 0 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024366900324821472
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 0 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 0 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3951857089996338
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 0 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 0 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019793111830949783
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 0 | train 18 of 190 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 1 | train 1 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0010949787683784962
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 1 | train 1 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 1 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.059346869587898254
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 1 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 1 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005507959984242916
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 1 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 1 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1205441802740097
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 1 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 1 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.23479634523391724
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 1 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 1 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02113969251513481
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 1 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 1 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4148697853088379
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 1 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 1 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011169631034135818
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 1 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 1 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17316026985645294
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 1 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 1 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0012813679641112685
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 1 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 1 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09186455607414246
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 1 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 1 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.24086707830429077
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 1 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 1 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008399555459618568
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 1 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 1 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2576320767402649
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 1 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 1 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005960502661764622
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 1 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 1 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4995046854019165
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 1 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 1 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006030727177858353
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 1 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 1 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2768576741218567
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 1 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 1 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07290269434452057
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 1 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 2 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014586109900847077
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 2 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 2 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.028897637501358986
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 2 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 2 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004983099177479744
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 2 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 2 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0698365643620491
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 2 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 2 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12778526544570923
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 2 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 2 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12861163914203644
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 2 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 2 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4647591710090637
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 2 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 2 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02560591697692871
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 2 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 2 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3652033805847168
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 2 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 2 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02278110384941101
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 2 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 2 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.028965383768081665
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 2 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 2 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20669159293174744
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 2 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 2 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.058816783130168915
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 2 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 2 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9453753232955933
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 2 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 2 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010389760136604309
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 2 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 2 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16000430285930634
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 2 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 2 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009916653856635094
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 2 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 2 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1267549991607666
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 2 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 2 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09101351350545883
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 2 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 3 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014060746179893613
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 3 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 3 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.025073044002056122
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 3 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 3 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005489845760166645
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 3 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 3 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1129036694765091
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 3 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 3 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17728787660598755
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 3 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 3 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07937021553516388
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 3 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 3 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6052042245864868
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 3 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 3 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019836703315377235
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 3 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 3 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7393311262130737
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 3 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 3 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00840615015476942
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 3 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 3 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03254687786102295
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 3 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 3 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1907840371131897
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 3 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 3 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012817710638046265
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 3 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 3 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3736830949783325
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 3 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 3 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019730128347873688
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 3 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 3 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6610206365585327
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 3 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 3 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07937411963939667
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 3 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 3 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.48445188999176025
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 3 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 3 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12719646096229553
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 3 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 4 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0029682242311537266
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 4 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 4 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.052337802946567535
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 4 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 4 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008426791056990623
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 4 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 4 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1916985809803009
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 4 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 4 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.28222429752349854
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 4 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 4 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0320466086268425
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 4 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 4 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6634764075279236
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 4 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 4 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.030753936618566513
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 4 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 4 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6369467377662659
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 4 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 4 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007932301610708237
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 4 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 4 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09405522048473358
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 4 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 4 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11175622791051865
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 4 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 4 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011340919882059097
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 4 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 4 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8756837844848633
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 4 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 4 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.020582228899002075
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 4 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 4 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5691372156143188
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 4 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 4 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013450155034661293
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 4 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 4 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6172586679458618
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 4 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 4 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16063973307609558
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 4 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 5 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0029666356276720762
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 5 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 5 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.041180677711963654
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 5 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 5 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011105215176939964
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 5 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 5 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11590657383203506
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 5 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 5 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21822968125343323
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 5 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 5 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1834886521100998
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 5 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 5 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6073651909828186
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 5 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 5 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.021741516888141632
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 5 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 5 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7276148796081543
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 5 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 5 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005166421178728342
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 5 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 5 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04676220566034317
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 5 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 5 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6337376832962036
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 5 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 5 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009128840640187263
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 5 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 5 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.29483285546302795
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 5 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 5 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.015418369323015213
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 5 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 5 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8493298292160034
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 5 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 5 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.021687183529138565
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 5 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 5 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5704292058944702
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 5 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 5 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1331380307674408
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 5 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 6 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002772980136796832
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 6 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 6 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04309022054076195
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 6 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 6 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007749172858893871
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 6 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 6 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20031431317329407
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 6 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 6 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17247837781906128
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 6 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 6 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.047914810478687286
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 6 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 6 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8882477879524231
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 6 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 6 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.027856048196554184
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 6 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 6 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9230397939682007
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 6 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 6 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008200975134968758
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 6 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 6 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1392553746700287
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 6 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 6 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21516844630241394
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 6 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 6 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009964967146515846
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 6 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 6 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.603339433670044
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 6 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 6 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02294953539967537
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 6 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 6 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7319220304489136
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 6 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 6 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.031002050265669823
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 6 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 6 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5323796272277832
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 6 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 6 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.042045991867780685
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 6 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 7 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002192724496126175
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 7 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 7 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09920653700828552
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 7 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 7 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013293454423546791
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 7 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 7 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2465762495994568
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 7 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 7 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.30853021144866943
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 7 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 7 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05003942549228668
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 7 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 7 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1531600952148438
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 7 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 7 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03009970486164093
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 7 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 7 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0429484844207764
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 7 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 7 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012893479317426682
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 7 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 7 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16676819324493408
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 7 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 7 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4552728235721588
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 7 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 7 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00901388842612505
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 7 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 7 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.44392967224121094
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 7 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 7 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019023030996322632
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 7 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 7 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7678083181381226
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 7 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 7 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019699539989233017
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 7 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 7 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.33245784044265747
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 7 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 7 | train 25 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10626185685396194
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 7 | train 25 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 8 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0020316666923463345
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 8 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 8 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03606586158275604
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 8 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 8 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004572663921862841
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 8 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 8 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04514719173312187
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 8 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 8 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1459510624408722
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 8 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 8 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0219549760222435
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 8 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 8 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.32496675848960876
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 8 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 8 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01579851470887661
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 8 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 8 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0401523113250732
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 8 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 8 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007516992278397083
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 8 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 8 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08697617053985596
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 8 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 8 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1903126835823059
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 8 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 8 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0055640684440732
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 8 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 8 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2479058802127838
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 8 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 8 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012021471746265888
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 8 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 8 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4898696541786194
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 8 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 8 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0191759392619133
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 8 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 8 | train 25 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4537506699562073
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 8 | train 25 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 8 | train 26 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09400692582130432
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 8 | train 26 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 9 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0008057806408032775
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 9 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 9 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.021080613136291504
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 9 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 9 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004594138823449612
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 9 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 9 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08444589376449585
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 9 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 9 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10885939002037048
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 9 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 9 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11930252611637115
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 9 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 9 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.42716488242149353
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 9 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 9 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013797938823699951
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 9 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 9 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5324645042419434
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 9 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 9 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007032329682260752
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 9 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 9 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03816349059343338
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 9 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 9 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22822386026382446
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 9 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 9 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005774511955678463
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 9 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 9 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2062239944934845
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 9 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 8]) | epoch 9 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006456104107201099
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 8]) | epoch 9 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 8]) | epoch 9 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2931743562221527
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 8]) | epoch 9 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 8]) | epoch 9 | train 25 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01896049454808235
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 8]) | epoch 9 | train 25 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 8]) | epoch 9 | train 26 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.30867403745651245
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 8]) | epoch 9 | train 26 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([15, 1, 8]) | epoch 9 | train 27 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 8]) | batch_masks~torch.Size([15, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] mask~torch.Size([15, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 8]) | batch_masks ~ torch.Size([15, 8]) | mask ~ torch.Size([15, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 8]) | o~torch.Size([15, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03757117688655853
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([15, 1, 8]) | epoch 9 | train 27 of 190 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best epoch: 0[0m
[8] [fine_tune_moment_train_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738582277.0973523 | End: 1738582336.7478735 | Duration: 59.65 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Eval Post | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0019669930916279554
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012169839814305305
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009375154040753841
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024238713085651398
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08911167085170746
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04039362818002701
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.039977990090847015
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18687328696250916
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 8]) | batch_masks~torch.Size([2, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 8]) | batch_masks ~ torch.Size([2, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 8]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02095312625169754
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([2, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.2034563748621828, 'rmse': 0.0500586381743094, 'mae': 0.1194415827429531, 'smape': 0.809675733048526, 'loss': 0.04722893359656963}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738582336.7491155 | End: 1738582341.2677379 | Duration: 4.52 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single_ | Evaluation summary
[8]  [ fine_tune_moment_single_ ] Eval pre: 
2025-02-03 11:32:21.341 | mse: 0.047555224275404
2025-02-03 11:32:21.341 | rmse: 0.0023509623045145176
2025-02-03 11:32:21.341 | mae: 0.025167910251408243
2025-02-03 11:32:21.341 | smape: 0.19016688410493182
2025-02-03 11:32:21.342 | loss: 0.002215934264111436
[8]  [ fine_tune_moment_single_ ] Eval post: 
2025-02-03 11:32:21.342 | mse: 0.2034563748621828
2025-02-03 11:32:21.343 | rmse: 0.0500586381743094
2025-02-03 11:32:21.343 | mae: 0.1194415827429531
2025-02-03 11:32:21.343 | smape: 0.809675733048526
2025-02-03 11:32:21.343 | loss: 0.04722893359656963
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ set_fine_tune_ ] best_epoch: [0m
[8] [91m [ set_fine_tune_ ] Processing wlen 10 | wlens [8] | i 2/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (431, 1, 10)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (10, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 130
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 11[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 430[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([130, 1, 10])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 431[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 130 | 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [ 11  15  23  29  30  32  33  34  37  38  39  41  45  46  48  52  54  55
  56  58  60  62  70  73  77  83  90  94  98 105 106 108 118 119 126 132
 133 135 138 145 150 155 158 160 162 163 164 167 168 173 174 179 180 183
 184 191 194 202 210 211 212 214 216 227 228 229 230 231 245 247 249 250
 251 253 256 258 262 263 264 265 271 277 279 285 290 291 294 299 300 305
 307 309 312 317 318 320 321 322 328 333 337 338 341 343 344 346 351 352
 357 358 361 365 367 372 374 376 382 384 387 388 398 399 408 409 412 421
 423 424 426 430] for case (10, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 301
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 301[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 300[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([301, 1, 10])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 301[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 301 | 301[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [ 11  15  23  29  30  32  33  34  37  38  39  41  45  46  48  52  54  55
  56  58  60  62  70  73  77  83  90  94  98 105 106 108 118 119 126 132
 133 135 138 145 150 155 158 160 162 163 164 167 168 173 174 179 180 183
 184 191 194 202 210 211 212 214 216 227 228 229 230 231 245 247 249 250
 251 253 256 258 262 263 264 265 271 277 279 285 290 291 294 299 300 305
 307 309 312 317 318 320 321 322 328 333 337 338 341 343 344 346 351 352
 357 358 361 365 367 372 374 376 382 384 387 388 398 399 408 409 412 421
 423 424 426 430] for case (10, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 10 | Lengths list: [8, 10]
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 10
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 10])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 19
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 0 | train 0 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014576786197721958
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 0 | train 0 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 0 | train 1 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010233085602521896
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 0 | train 1 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 0 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024544138461351395
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 0 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 0 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011088019236922264
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 0 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 0 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15329241752624512
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 0 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 0 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009626200422644615
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 0 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 0 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2424355447292328
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 0 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 0 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.048760831356048584
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 0 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 0 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2411573827266693
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 0 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 0 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1669258326292038
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 0 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 0 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006626056972891092
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 0 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 0 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1167331337928772
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 0 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 0 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004825546406209469
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 0 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 0 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15153473615646362
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 0 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 0 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006797646172344685
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 0 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 0 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.23103484511375427
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 0 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 0 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012110930867493153
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 0 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 0 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5037320852279663
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 0 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 0 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.045170657336711884
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 0 | train 18 of 190 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 1 | train 1 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001178668113425374
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 1 | train 1 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 1 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.014410847797989845
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 1 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 1 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.038176197558641434
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 1 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 1 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05340106040239334
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 1 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 1 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.35970985889434814
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 1 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 1 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.020922895520925522
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 1 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 1 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8840357065200806
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 1 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 1 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09193331003189087
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 1 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 1 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4988594651222229
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 1 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 1 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15708747506141663
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 1 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 1 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.015728596597909927
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 1 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 1 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.28641772270202637
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 1 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 1 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007798461709171534
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 1 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 1 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.29084324836730957
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 1 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 1 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010530181229114532
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 1 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 1 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6547644138336182
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 1 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 1 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.016720890998840332
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 1 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 1 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8853850364685059
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 1 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 1 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14486071467399597
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 1 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 2 | train 2 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0029516592621803284
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 2 | train 2 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 2 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.039768390357494354
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 2 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 2 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09128089249134064
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 2 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 2 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11051596701145172
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 2 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 2 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7540671825408936
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 2 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 2 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.025136951357126236
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 2 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 2 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7330471873283386
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 2 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 2 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09853444993495941
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 2 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 2 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2947012484073639
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 2 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 2 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18647760152816772
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 2 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 2 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.025936294347047806
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 2 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 2 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.581564903259277
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 2 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 2 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04090624302625656
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 2 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 2 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.3854587078094482
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 2 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 2 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04311303049325943
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 2 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 2 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9933967590332031
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 2 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 2 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.031387992203235626
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 2 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 2 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.6735150814056396
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 2 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 2 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3725817799568176
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 2 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 3 | train 3 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0031100912019610405
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 3 | train 3 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 3 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.042064785957336426
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 3 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 3 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09230828285217285
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 3 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 3 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14880259335041046
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 3 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 3 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7754069566726685
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 3 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 3 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04092072695493698
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 3 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 3 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.4014520645141602
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 3 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 3 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21583029627799988
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 3 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 3 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.593711018562317
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 3 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 3 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.903282642364502
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 3 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 3 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05181703343987465
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 3 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 3 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8765562772750854
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 3 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 3 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.046726830303668976
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 3 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 3 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5438611507415771
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 3 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 3 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.053904369473457336
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 3 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 3 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.993011951446533
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 3 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 3 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09806057810783386
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 3 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 3 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.925605058670044
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 3 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 3 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.2966442108154297
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 3 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 4 | train 4 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0018746003042906523
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 4 | train 4 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 4 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02195132151246071
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 4 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 4 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16263382136821747
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 4 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 4 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11390151083469391
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 4 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 4 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.2109920978546143
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 4 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 4 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05454103648662567
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 4 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 4 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.0300517082214355
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 4 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 4 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.8489527702331543
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 4 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 4 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.0147013664245605
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 4 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 4 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.2997453212738037
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 4 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 4 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1610150933265686
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 4 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 4 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3053644299507141
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 4 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 4 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03043852001428604
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 4 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 4 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.105151891708374
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 4 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 4 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.059371985495090485
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 4 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 4 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.051882266998291
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 4 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 4 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6232093572616577
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 4 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 4 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.7061357498168945
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 4 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 4 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1618739664554596
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 4 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 5 | train 5 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04161251708865166
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 5 | train 5 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 5 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13010069727897644
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 5 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 5 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22236421704292297
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 5 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 5 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.28147411346435547
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 5 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 5 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.4755678176879883
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 5 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 5 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1314326971769333
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 5 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 5 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.218017578125
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 5 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 5 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7357736825942993
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 5 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 5 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.652091026306152
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 5 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 5 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.3214659690856934
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 5 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 5 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06033837050199509
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 5 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 5 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.649140477180481
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 5 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 5 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.046298034489154816
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 5 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 5 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.1732349395751953
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 5 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 5 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11891821771860123
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 5 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 5 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.513693809509277
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 5 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 5 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15400388836860657
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 5 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 5 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.9557037353515625
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 5 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 5 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4483393132686615
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 5 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 6 | train 6 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009807009249925613
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 6 | train 6 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 6 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20392674207687378
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 6 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 6 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.349368155002594
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 6 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 6 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21976324915885925
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 6 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 6 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.4582018852233887
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 6 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 6 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14128661155700684
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 6 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 6 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.010388374328613
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 6 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 6 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1520506143569946
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 6 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 6 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.637511253356934
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 6 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 6 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.6854891777038574
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 6 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 6 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18497005105018616
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 6 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 6 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1097867488861084
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 6 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 6 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.023253098130226135
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 6 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 6 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.4200316667556763
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 6 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 6 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.043782882392406464
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 6 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 6 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.749197483062744
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 6 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 6 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2723877429962158
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 6 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 6 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 8.743144989013672
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 6 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 6 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.2251415252685547
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 6 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 7 | train 7 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008577274158596992
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 7 | train 7 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 7 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11677762120962143
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 7 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 7 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5933231115341187
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 7 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 7 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3442082703113556
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 7 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 7 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.904900550842285
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 7 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 7 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22119498252868652
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 7 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 7 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.5452094078063965
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 7 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 7 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5898151397705078
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 7 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 7 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.17199182510376
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 7 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 7 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.990434169769287
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 7 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 7 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2906774878501892
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 7 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 7 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.20687198638916
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 7 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 7 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04890163987874985
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 7 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 7 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9610804319381714
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 7 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 7 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1163601502776146
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 7 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 7 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.088691711425781
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 7 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 7 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.27261480689048767
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 7 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 7 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 14.599574089050293
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 7 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 7 | train 25 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6654399037361145
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 7 | train 25 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 8 | train 8 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005175094120204449
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 8 | train 8 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 8 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08077347278594971
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 8 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 8 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2938070297241211
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 8 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 8 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13616028428077698
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 8 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 8 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.8874545097351074
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 8 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 8 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21591460704803467
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 8 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 8 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.275504112243652
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 8 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 8 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.7805750370025635
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 8 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 8 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.439943790435791
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 8 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 8 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.166083335876465
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 8 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 8 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5493990182876587
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 8 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 8 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.211245536804199
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 8 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 8 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1264055222272873
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 8 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 8 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.160311222076416
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 8 | train 21 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([16, 1, 10]) | epoch 8 | train 22 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.030388426035642624
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([16, 1, 10]) | epoch 8 | train 22 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 15 ~ torch.Size([16, 1, 10]) | epoch 8 | train 23 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0622578859329224
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 15 ~ torch.Size([16, 1, 10]) | epoch 8 | train 23 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 16 ~ torch.Size([16, 1, 10]) | epoch 8 | train 24 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11424647271633148
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 16 ~ torch.Size([16, 1, 10]) | epoch 8 | train 24 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 17 ~ torch.Size([16, 1, 10]) | epoch 8 | train 25 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 9.609098434448242
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 17 ~ torch.Size([16, 1, 10]) | epoch 8 | train 25 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 18 ~ torch.Size([13, 1, 10]) | epoch 8 | train 26 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([13, 1, 10]) | batch_masks~torch.Size([13, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([13, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] mask~torch.Size([13, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([13, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([13, 1, 10]) | batch_masks ~ torch.Size([13, 10]) | mask ~ torch.Size([13, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([13, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([13, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([13, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([13, 1, 10]) | o~torch.Size([13, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([13, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([13, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([13, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.538295269012451
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 18 ~ torch.Size([13, 1, 10]) | epoch 8 | train 26 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 9 | train 9 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.014599462039768696
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 9 | train 9 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 9 | train 10 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03352554887533188
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 9 | train 10 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 9 | train 11 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13079412281513214
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 9 | train 11 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 9 | train 12 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.23139387369155884
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 9 | train 12 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 9 | train 13 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.4912915229797363
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 9 | train 13 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 9 | train 14 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13743069767951965
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 9 | train 14 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 9 | train 15 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.1211013793945312
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 9 | train 15 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 9 | train 16 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8786249160766602
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 9 | train 16 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 9 | train 17 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.507549285888672
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 9 | train 17 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 9 | train 18 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.7933638095855713
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 9 | train 18 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 9 | train 19 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.34764719009399414
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 9 | train 19 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 9 | train 20 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.8913722038269043
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 9 | train 20 of 190 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 9 | train 21 of 190 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
