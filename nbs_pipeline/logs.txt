[8] [ --> _set_encoder ]
[8]  [ _set_encoder ] About to exec _set_enc_input
[8] [ --> _set_enc_input ]
[8]  [ _set_enc_input ] is none enc_input? True
[8]  [ _set_enc_input ] About to get the windows
[8] [ --> windowed_dataset ]
[8]  [ _set_enc_input ] X is a DataFrame, X~(440, 1) | window_sizes 1, n_window_sizes 5
[8]  [ _set_enc_input ] X is a DataFrame | Selecting Fourier's dominant frequences
[8] [ --> Find_dominant_window_sizes_list ]
[8]  [ Find_dominant_window_sizes_list ] X ~ (440, 1)
[8]  [ Find_dominant_window_sizes_list ] Get sizes for var 0
[8] [ --> find_dominant_window_sizes_list_single ]
[8]  [ find_dominant_window_sizes_list_single ] X ~ (440,)
[8]  [ find_dominant_window_sizes_list_single ] Looking for - at most - the best 5 window sizes
[8]  [ find_dominant_window_sizes_list_single ] Offset 0.05 max size: 22.0
[8]  [ find_dominant_window_sizes_list_single ] --> Freqs
[8]  [ find_dominant_window_sizes_list_single ] Freqs [ 0.          0.00227273  0.00454545  0.00681818  0.00909091  0.01136364
  0.01363636  0.01590909  0.01818182  0.02045455  0.02272727  0.025
  0.02727273  0.02954545  0.03181818  0.03409091  0.03636364  0.03863636
  0.04090909  0.04318182  0.04545455  0.04772727  0.05        0.05227273
  0.05454545  0.05681818  0.05909091  0.06136364  0.06363636  0.06590909
  0.06818182  0.07045455  0.07272727  0.075       0.07727273  0.07954545
  0.08181818  0.08409091  0.08636364  0.08863636  0.09090909  0.09318182
  0.09545455  0.09772727  0.1         0.10227273  0.10454545  0.10681818
  0.10909091  0.11136364  0.11363636  0.11590909  0.11818182  0.12045455
  0.12272727  0.125       0.12727273  0.12954545  0.13181818  0.13409091
  0.13636364  0.13863636  0.14090909  0.14318182  0.14545455  0.14772727
  0.15        0.15227273  0.15454545  0.15681818  0.15909091  0.16136364
  0.16363636  0.16590909  0.16818182  0.17045455  0.17272727  0.175
  0.17727273  0.17954545  0.18181818  0.18409091  0.18636364  0.18863636
  0.19090909  0.19318182  0.19545455  0.19772727  0.2         0.20227273
  0.20454545  0.20681818  0.20909091  0.21136364  0.21363636  0.21590909
  0.21818182  0.22045455  0.22272727  0.225       0.22727273  0.22954545
  0.23181818  0.23409091  0.23636364  0.23863636  0.24090909  0.24318182
  0.24545455  0.24772727  0.25        0.25227273  0.25454545  0.25681818
  0.25909091  0.26136364  0.26363636  0.26590909  0.26818182  0.27045455
  0.27272727  0.275       0.27727273  0.27954545  0.28181818  0.28409091
  0.28636364  0.28863636  0.29090909  0.29318182  0.29545455  0.29772727
  0.3         0.30227273  0.30454545  0.30681818  0.30909091  0.31136364
  0.31363636  0.31590909  0.31818182  0.32045455  0.32272727  0.325
  0.32727273  0.32954545  0.33181818  0.33409091  0.33636364  0.33863636
  0.34090909  0.34318182  0.34545455  0.34772727  0.35        0.35227273
  0.35454545  0.35681818  0.35909091  0.36136364  0.36363636  0.36590909
  0.36818182  0.37045455  0.37272727  0.375       0.37727273  0.37954545
  0.38181818  0.38409091  0.38636364  0.38863636  0.39090909  0.39318182
  0.39545455  0.39772727  0.4         0.40227273  0.40454545  0.40681818
  0.40909091  0.41136364  0.41363636  0.41590909  0.41818182  0.42045455
  0.42272727  0.425       0.42727273  0.42954545  0.43181818  0.43409091
  0.43636364  0.43863636  0.44090909  0.44318182  0.44545455  0.44772727
  0.45        0.45227273  0.45454545  0.45681818  0.45909091  0.46136364
  0.46363636  0.46590909  0.46818182  0.47045455  0.47272727  0.475
  0.47727273  0.47954545  0.48181818  0.48409091  0.48636364  0.48863636
  0.49090909  0.49318182  0.49545455  0.49772727 -0.5        -0.49772727
 -0.49545455 -0.49318182 -0.49090909 -0.48863636 -0.48636364 -0.48409091
 -0.48181818 -0.47954545 -0.47727273 -0.475      -0.47272727 -0.47045455
 -0.46818182 -0.46590909 -0.46363636 -0.46136364 -0.45909091 -0.45681818
 -0.45454545 -0.45227273 -0.45       -0.44772727 -0.44545455 -0.44318182
 -0.44090909 -0.43863636 -0.43636364 -0.43409091 -0.43181818 -0.42954545
 -0.42727273 -0.425      -0.42272727 -0.42045455 -0.41818182 -0.41590909
 -0.41363636 -0.41136364 -0.40909091 -0.40681818 -0.40454545 -0.40227273
 -0.4        -0.39772727 -0.39545455 -0.39318182 -0.39090909 -0.38863636
 -0.38636364 -0.38409091 -0.38181818 -0.37954545 -0.37727273 -0.375
 -0.37272727 -0.37045455 -0.36818182 -0.36590909 -0.36363636 -0.36136364
 -0.35909091 -0.35681818 -0.35454545 -0.35227273 -0.35       -0.34772727
 -0.34545455 -0.34318182 -0.34090909 -0.33863636 -0.33636364 -0.33409091
 -0.33181818 -0.32954545 -0.32727273 -0.325      -0.32272727 -0.32045455
 -0.31818182 -0.31590909 -0.31363636 -0.31136364 -0.30909091 -0.30681818
 -0.30454545 -0.30227273 -0.3        -0.29772727 -0.29545455 -0.29318182
 -0.29090909 -0.28863636 -0.28636364 -0.28409091 -0.28181818 -0.27954545
 -0.27727273 -0.275      -0.27272727 -0.27045455 -0.26818182 -0.26590909
 -0.26363636 -0.26136364 -0.25909091 -0.25681818 -0.25454545 -0.25227273
 -0.25       -0.24772727 -0.24545455 -0.24318182 -0.24090909 -0.23863636
 -0.23636364 -0.23409091 -0.23181818 -0.22954545 -0.22727273 -0.225
 -0.22272727 -0.22045455 -0.21818182 -0.21590909 -0.21363636 -0.21136364
 -0.20909091 -0.20681818 -0.20454545 -0.20227273 -0.2        -0.19772727
 -0.19545455 -0.19318182 -0.19090909 -0.18863636 -0.18636364 -0.18409091
 -0.18181818 -0.17954545 -0.17727273 -0.175      -0.17272727 -0.17045455
 -0.16818182 -0.16590909 -0.16363636 -0.16136364 -0.15909091 -0.15681818
 -0.15454545 -0.15227273 -0.15       -0.14772727 -0.14545455 -0.14318182
 -0.14090909 -0.13863636 -0.13636364 -0.13409091 -0.13181818 -0.12954545
 -0.12727273 -0.125      -0.12272727 -0.12045455 -0.11818182 -0.11590909
 -0.11363636 -0.11136364 -0.10909091 -0.10681818 -0.10454545 -0.10227273
 -0.1        -0.09772727 -0.09545455 -0.09318182 -0.09090909 -0.08863636
 -0.08636364 -0.08409091 -0.08181818 -0.07954545 -0.07727273 -0.075
 -0.07272727 -0.07045455 -0.06818182 -0.06590909 -0.06363636 -0.06136364
 -0.05909091 -0.05681818 -0.05454545 -0.05227273 -0.05       -0.04772727
 -0.04545455 -0.04318182 -0.04090909 -0.03863636 -0.03636364 -0.03409091
 -0.03181818 -0.02954545 -0.02727273 -0.025      -0.02272727 -0.02045455
 -0.01818182 -0.01590909 -0.01363636 -0.01136364 -0.00909091 -0.00681818
 -0.00454545 -0.00227273] -->
[8]  [ find_dominant_window_sizes_list_single ] coefs [7.05208450e+01 2.17522066e+01 1.51117073e+01 1.08917429e+01
 7.98043598e+00 4.85509881e+00 5.08770649e+00 4.61865603e+00
 1.05418881e+01 4.14979431e+00 4.76953214e-01 5.86317778e-01
 7.18337760e-01 1.07780909e+00 2.35498782e-01 7.20215333e-01
 1.96347247e+00 9.38784226e+00 2.99297830e+00 2.08189696e+00
 2.49385046e+00 1.71487275e+00 1.94407839e+00 1.96098531e+00
 1.89724827e+00 8.15590795e+00 3.52111673e+00 8.99907928e-01
 1.06066847e+00 8.28651027e-01 7.64079256e-01 9.36246469e-01
 5.81945408e-01 2.59914187e+00 5.88234408e+00 1.81839487e+00
 1.61762788e+00 1.39577649e+00 1.43216216e+00 1.49479629e+00
 1.19792146e+00 1.31164524e+00 3.67380021e+00 1.11452862e+00
 4.83337162e-01 1.82045706e-01 2.51375542e-01 8.59942592e-02
 5.14102525e-01 3.07583414e-01 7.76624319e-01 2.75514067e+00
 1.37824354e+00 1.46632219e-01 8.67086600e-01 5.33131622e-01
 5.37527585e-01 3.35078734e-01 3.15423069e-01 5.14284786e-01
 9.10117190e-01 7.90460275e-01 4.32711634e-01 3.93838231e-01
 4.18690901e-01 4.23629859e-01 7.50179324e-01 1.13851179e+00
 6.40861403e-01 1.26757880e-01 3.62668541e-01 1.03689586e-01
 4.53112006e-01 3.77366888e-01 8.20368247e-02 4.02314524e-01
 1.43060549e+00 5.70117079e-01 5.80550972e-01 2.43891425e-01
 5.09424523e-01 3.41242063e-01 5.75738081e-01 5.46758534e-01
 1.61731453e+00 1.83306734e-01 4.29781084e-01 1.72372519e-01
 9.96824171e-02 6.16629699e-02 3.83731539e-01 1.94739951e-01
 1.05264356e+00 2.19393275e+00 9.63156393e-01 6.26881821e-01
 5.32550231e-01 6.29025335e-01 6.22641311e-01 5.86583104e-01
 4.87077570e-01 1.32796671e+00 3.82040960e-01 4.77883625e-01
 1.24875209e-01 2.62341193e-01 1.43642833e-01 3.16621068e-01
 2.30396944e-01 1.27399937e+00 1.96126638e+00 1.19371022e+00
 8.59447880e-01 7.97778595e-01 5.27269828e-01 3.98809808e-01
 4.32951835e-01 7.52366345e-01 1.93323776e+00 7.28311360e-01
 4.15258679e-01 1.40513014e-01 3.91111899e-01 1.09665817e-01
 5.06474122e-01 2.67548244e-01 7.78454603e-01 1.28718009e+00
 9.37300430e-01 1.74514937e-01 4.80464220e-01 1.46025905e-01
 3.35117279e-01 1.05098177e-01 6.42178473e-01 4.91593538e-01
 1.83137275e-01 5.87990897e-01 9.85901654e-02 3.78025387e-01
 1.71697441e-01 5.45500234e-01 4.62014884e-01 8.06124751e-01
 6.32469073e-01 3.20604343e-01 3.13630825e-01 7.09827408e-01
 2.42198416e-01 4.83588209e-01 1.78252899e-01 4.82234424e-01
 2.84326895e-01 3.58662760e-01 5.60258251e-01 1.49563774e-01
 3.85001188e-01 1.86587731e-01 6.02123474e-01 1.71488932e-01
 9.20529001e-01 5.86678171e-01 4.16942363e-01 1.20759219e-01
 2.03270008e-01 2.56957857e-01 4.97482399e-01 2.21753783e-01
 7.77688688e-01 9.70753417e-01 9.64500032e-01 5.24903110e-01
 2.37929172e-01 2.68556750e-01 2.81549865e-01 4.23825895e-01
 7.07139444e-01 1.40628665e+00 7.23895052e-01 2.87939965e-01
 1.70589963e-01 1.86167939e-01 1.24306854e-01 4.02796030e-01
 3.43824952e-01 7.82722618e-01 9.60348143e-01 9.03734349e-01
 2.05860795e-01 5.30708958e-01 3.87088594e-01 3.65813128e-01
 3.92789116e-01 7.51960126e-01 9.55793288e-01 6.46895798e-01
 6.06062984e-01 1.06755334e-01 3.46925168e-01 1.18433818e-01
 4.65098476e-01 4.01014572e-01 3.82187726e-01 3.89927607e-01
 6.39409585e-01 1.16398430e-01 5.37536982e-01 2.60664188e-01
 5.94530536e-01 3.42324045e-01 5.92096914e-01 6.69123580e-01
 3.82960792e-01 3.88082937e-01 3.15541249e-01 5.47114371e-01
 1.58975566e-01 3.59959298e-01 3.04271830e-01 4.07639725e-01
 3.33335000e-01 4.07639725e-01 3.04271830e-01 3.59959298e-01
 1.58975566e-01 5.47114371e-01 3.15541249e-01 3.88082937e-01
 3.82960792e-01 6.69123580e-01 5.92096914e-01 3.42324045e-01
 5.94530536e-01 2.60664188e-01 5.37536982e-01 1.16398430e-01
 6.39409585e-01 3.89927607e-01 3.82187726e-01 4.01014572e-01
 4.65098476e-01 1.18433818e-01 3.46925168e-01 1.06755334e-01
 6.06062984e-01 6.46895798e-01 9.55793288e-01 7.51960126e-01
 3.92789116e-01 3.65813128e-01 3.87088594e-01 5.30708958e-01
 2.05860795e-01 9.03734349e-01 9.60348143e-01 7.82722618e-01
 3.43824952e-01 4.02796030e-01 1.24306854e-01 1.86167939e-01
 1.70589963e-01 2.87939965e-01 7.23895052e-01 1.40628665e+00
 7.07139444e-01 4.23825895e-01 2.81549865e-01 2.68556750e-01
 2.37929172e-01 5.24903110e-01 9.64500032e-01 9.70753417e-01
 7.77688688e-01 2.21753783e-01 4.97482399e-01 2.56957857e-01
 2.03270008e-01 1.20759219e-01 4.16942363e-01 5.86678171e-01
 9.20529001e-01 1.71488932e-01 6.02123474e-01 1.86587731e-01
 3.85001188e-01 1.49563774e-01 5.60258251e-01 3.58662760e-01
 2.84326895e-01 4.82234424e-01 1.78252899e-01 4.83588209e-01
 2.42198416e-01 7.09827408e-01 3.13630825e-01 3.20604343e-01
 6.32469073e-01 8.06124751e-01 4.62014884e-01 5.45500234e-01
 1.71697441e-01 3.78025387e-01 9.85901654e-02 5.87990897e-01
 1.83137275e-01 4.91593538e-01 6.42178473e-01 1.05098177e-01
 3.35117279e-01 1.46025905e-01 4.80464220e-01 1.74514937e-01
 9.37300430e-01 1.28718009e+00 7.78454603e-01 2.67548244e-01
 5.06474122e-01 1.09665817e-01 3.91111899e-01 1.40513014e-01
 4.15258679e-01 7.28311360e-01 1.93323776e+00 7.52366345e-01
 4.32951835e-01 3.98809808e-01 5.27269828e-01 7.97778595e-01
 8.59447880e-01 1.19371022e+00 1.96126638e+00 1.27399937e+00
 2.30396944e-01 3.16621068e-01 1.43642833e-01 2.62341193e-01
 1.24875209e-01 4.77883625e-01 3.82040960e-01 1.32796671e+00
 4.87077570e-01 5.86583104e-01 6.22641311e-01 6.29025335e-01
 5.32550231e-01 6.26881821e-01 9.63156393e-01 2.19393275e+00
 1.05264356e+00 1.94739951e-01 3.83731539e-01 6.16629699e-02
 9.96824171e-02 1.72372519e-01 4.29781084e-01 1.83306734e-01
 1.61731453e+00 5.46758534e-01 5.75738081e-01 3.41242063e-01
 5.09424523e-01 2.43891425e-01 5.80550972e-01 5.70117079e-01
 1.43060549e+00 4.02314524e-01 8.20368247e-02 3.77366888e-01
 4.53112006e-01 1.03689586e-01 3.62668541e-01 1.26757880e-01
 6.40861403e-01 1.13851179e+00 7.50179324e-01 4.23629859e-01
 4.18690901e-01 3.93838231e-01 4.32711634e-01 7.90460275e-01
 9.10117190e-01 5.14284786e-01 3.15423069e-01 3.35078734e-01
 5.37527585e-01 5.33131622e-01 8.67086600e-01 1.46632219e-01
 1.37824354e+00 2.75514067e+00 7.76624319e-01 3.07583414e-01
 5.14102525e-01 8.59942592e-02 2.51375542e-01 1.82045706e-01
 4.83337162e-01 1.11452862e+00 3.67380021e+00 1.31164524e+00
 1.19792146e+00 1.49479629e+00 1.43216216e+00 1.39577649e+00
 1.61762788e+00 1.81839487e+00 5.88234408e+00 2.59914187e+00
 5.81945408e-01 9.36246469e-01 7.64079256e-01 8.28651027e-01
 1.06066847e+00 8.99907928e-01 3.52111673e+00 8.15590795e+00
 1.89724827e+00 1.96098531e+00 1.94407839e+00 1.71487275e+00
 2.49385046e+00 2.08189696e+00 2.99297830e+00 9.38784226e+00
 1.96347247e+00 7.20215333e-01 2.35498782e-01 1.07780909e+00
 7.18337760e-01 5.86317778e-01 4.76953214e-01 4.14979431e+00
 1.05418881e+01 4.61865603e+00 5.08770649e+00 4.85509881e+00
 7.98043598e+00 1.08917429e+01 1.51117073e+01 2.17522066e+01] -->
[8]  [ find_dominant_window_sizes_list_single ] Freqs -->
[8]  [ find_dominant_window_sizes_list_single ] Coefs and window_sizes -->
[8]  [ find_dominant_window_sizes_list_single ] --> Find and return valid window_sizes
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 0 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 1 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 2 ... [  0   1   2   7  16  24   3  33   5   4   6   8  41  25  17  50  32  19
  92  18  15 109  22  21 117  23  34  20  35  83  38  37  75 176  36  51
 100  40 126 108  39 110  66  42  12  27  91 168 169  93 185 193 127  30
 159  59 186  26  53 111  28 142 112  60 184 125 167  49  29 116 192  65
 118 177  14  11 146 175 210 194 133  67 203 143  96  94  97 195 157 207
 209 136 160  98  10  31  77  81  76 153 214  82 140 205  55  54  95 188
 113 170  58  47  79 123 165 134  99 148  43 150 129 102   9 199 141  71
 115  61  85 174  64  63 161 119 218 182  74 200 114  62 191 121 202 212
 189 155  89 211 201 101 138  72 190  69 216 152 197 183 208  80 131  56
 144 106 213  57 145  48 217 178 151 173 172 124 104 206 164  45  78 147
 171  13 107 166 187 163  90 156 180  84 135  44 149 128  86 139 158 179
 215 154  52 130 105 120  68 103 181 162 198 204 122 196 132  70  87 137
  46  73  88]
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes | ... 2b ... 5
[8]  [ find_dominant_window_sizes_list_single ] Find and return valid window_sizes -->
[8]  [ find_dominant_window_sizes_list_single ] Sizes: [17, 12, 10, 16, 8]
[8] [find_dominant_window_sizes_list_single --> ]
[8]  [ Find_dominant_window_sizes_list ] Get sizes for var 0 | [17, 12, 10, 16, 8]
[8]  [ Find_dominant_window_sizes_list ] Grouping sizes
[8]  [ Find_dominant_window_sizes_list ] Final selected window sizes: [17, 12, 10, 16, 8]
[8] [Find_dominant_window_sizes_list --> ]
[8]  [ windowed_dataset ] X is a DataFrame | Window sizes: 5
[8]  [ windowed_dataset ] Building the windows
[8]  [ windowed_dataset ] w = 8
[8]  [ windowed_dataset ] w 8 | enc_input~(433, 1, 8) | dss~1
[8]  [ windowed_dataset ] w = 10
[8]  [ windowed_dataset ] w 10 | enc_input~(431, 1, 10) | dss~2
[8]  [ windowed_dataset ] w = 12
[8]  [ windowed_dataset ] w 12 | enc_input~(429, 1, 12) | dss~3
[8]  [ windowed_dataset ] w = 16
[8]  [ windowed_dataset ] w 16 | enc_input~(425, 1, 16) | dss~4
[8]  [ windowed_dataset ] w = 17
[8]  [ windowed_dataset ] w 17 | enc_input~(424, 1, 17) | dss~5
[8]  [ windowed_dataset ] Number of windows: 5
[8] [windowed_dataset --> ]
[8]  [ _set_enc_input ] About to get the encoder input | windows~5
[8]  [ _set_enc_input ] Enc input obtained | enc_input~(433, 1, 8)
[8] [_set_encoder --> ]
[8]  [ _set_encoder ] enc_input~(433, 1, 8)
[8]  [ _set_encoder ] About to exec _set_optimizer
[8] [ --> _set_optimizer ]
[8] [_set_encoder --> ]
[8] [_set_encoder --> ]
[8] [ --> set_fine_tune_ ]
[8]  [ set_fine_tune_ ] Model class: momentfm.models.moment.MOMENTPipeline
[8]  [ set_fine_tune_ ] Moment
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [set_fine_tune_ --> ]
[8] [_set_encoder --> ]
[8] [ --> fine_tune ]
[8] [ --> set_fine_tune_ ]
[8]  [ set_fine_tune_ ] Model class: momentfm.models.moment.MOMENTPipeline
[8]  [ set_fine_tune_ ] Moment
[8] [set_fine_tune_ --> ]
[8]  [ set_fine_tune_ ] Use fine_tune_moment parameters
[8] [ --> fine_tune_moment_ ]
[8]  [ set_fine_tune_ ] Processing 5 datasets : (433, 1, 8)
[8]  [ set_fine_tune_ ] Setting up optimizer as AdamW
[8] [91m [ set_fine_tune_ ] Processing wlen 8 | wlens [] | i 1/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (433, 1, 8)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (8, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 130
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 1[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 432[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([130, 1, 8])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 433[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 130 | 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [  1   3   6   9  11  12  14  16  18  28  31  39  41  44  49  52  57  58
  62  63  64  67  68  70  80  87  93  97 100 107 108 109 114 116 117 120
 122 126 128 129 133 136 145 146 149 150 154 163 164 165 166 169 173 174
 175 176 191 193 194 195 196 199 201 208 210 212 214 217 222 223 224 225
 227 229 231 234 242 243 246 251 255 257 258 262 268 271 277 278 280 282
 283 285 289 291 293 294 296 299 305 308 312 333 334 338 339 340 343 345
 351 352 360 377 378 380 385 387 388 390 397 399 404 406 416 417 421 427
 429 430 431 432] for case (8, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 228
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 228[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 302[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([228, 1, 8])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 303[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 228 | 228[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [  1   3   6   9  11  12  14  16  18  28  31  39  41  44  49  52  57  58
  62  63  64  67  68  70  80  87  93  97 100 107 108 109 114 116 117 120
 122 126 128 129 133 136 145 146 149 150 154 163 164 165 166 169 173 174
 175 176 191 193 194 195 196 199 201 208 210 212 214 217 222 223 224 225
 227 229 231 234 242 243 246 251 255 257 258 262 268 271 277 278 280 282
 283 285 289 291 293 294 296 299 305 308 312 333 334 338 339 340 343 345
 351 352 360 377 378 380 385 387 388 390 397 399 404 406 416 417 421 427
 429 430 431 432] for case (8, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 8 | Lengths list: [8]
[8]  [ fine_tune_moment_single_ ] Eval Pre | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00043170276330783963
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0005651424871757627
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0013665168080478907
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0018593431450426579
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001234386581927538
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0036571938544511795
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003975884057581425
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006142236292362213
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 8]) | batch_masks~torch.Size([2, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 8]) | batch_masks ~ torch.Size([2, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 8]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00035432406002655625
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([2, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.0466742784379702, 'rmse': 0.002372516539817199, 'mae': 0.024573392572794825, 'smape': 0.18259319015401002, 'loss': 0.00217630333888034}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581252.6614113 | End: 1738581257.1264734 | Duration: 4.47 seconds
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 8
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 8])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 15
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 0 | train 0 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.0847513193730265e-05
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 0 | train 0 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 0 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0970047116279602
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 0 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 0 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0020335321314632893
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 0 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 0 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.25512468814849854
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 0 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 0 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0024988637305796146
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 0 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 0 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012486189603805542
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 0 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 0 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03417400270700455
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 0 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 0 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07751145958900452
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 0 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 0 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0859908014535904
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 0 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 0 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0763477087020874
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 0 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 0 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010434286668896675
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 0 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 0 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3238285183906555
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 0 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 0 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009746910072863102
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 0 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 0 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5910800695419312
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 0 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 0 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009999620728194714
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 0 | train 14 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 1 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0023103817366063595
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 1 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 1 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06740150600671768
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 1 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 1 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01731226220726967
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 1 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 1 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.42000091075897217
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 1 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 1 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.035819560289382935
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 1 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 1 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9104134440422058
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 1 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 1 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.39419054985046387
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 1 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 1 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.41336315870285034
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 1 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 1 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7034318447113037
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 1 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 1 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19166013598442078
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 1 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 1 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010221263393759727
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 1 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 1 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5589789152145386
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 1 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 1 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09441648423671722
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 1 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 1 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.4829893112182617
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 1 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 1 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08167661726474762
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 1 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 2 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001894671469926834
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 2 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 2 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.062048859894275665
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 2 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 2 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012041119858622551
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 2 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 2 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2716563940048218
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 2 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 2 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03403645008802414
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 2 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 2 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0398094654083252
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 2 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 2 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7171770334243774
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 2 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 2 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7323875427246094
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 2 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 2 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.3974671363830566
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 2 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 2 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6697450876235962
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 2 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 2 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02360694482922554
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 2 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 2 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6976749897003174
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 2 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 2 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04767587035894394
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 2 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 2 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5400054454803467
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 2 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 2 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.030541129410266876
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 2 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 3 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0017434577457606792
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 3 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 3 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0449153333902359
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 3 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 3 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007957292720675468
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 3 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 3 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1662386953830719
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 3 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 3 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024327287450432777
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 3 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 3 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5469590425491333
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 3 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 3 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4304368495941162
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 3 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 3 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.46172699332237244
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 3 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 3 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1829286813735962
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 3 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 3 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.36309486627578735
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 3 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 3 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0271892212331295
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 3 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 3 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2340024709701538
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 3 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 3 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.015754815191030502
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 3 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 3 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6346158981323242
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 3 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 3 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05083955451846123
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 3 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 4 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002598760649561882
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 4 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 4 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024987325072288513
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 4 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 4 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0061746579594910145
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 4 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 4 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1223314106464386
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 4 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 4 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010098455473780632
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 4 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 4 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18008261919021606
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 4 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 4 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12421967834234238
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 4 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 4 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16524675488471985
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 4 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 4 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7916114330291748
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 4 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 4 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0880168229341507
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 4 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 4 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008209891617298126
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 4 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 4 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22400036454200745
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 4 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 4 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04874740168452263
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 4 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 4 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.26422810554504395
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 4 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 4 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008875896222889423
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 4 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 5 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0026521768886595964
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 5 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 5 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.021742764860391617
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 5 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 5 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010000843554735184
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 5 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 5 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11769849061965942
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 5 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 5 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012372976168990135
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 5 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 5 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4034680724143982
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 5 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 5 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19404146075248718
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 5 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 5 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13126948475837708
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 5 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 5 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21064648032188416
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 5 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 5 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07234808802604675
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 5 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 5 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0341879278421402
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 5 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 5 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3528670072555542
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 5 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 5 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08318862318992615
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 5 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 5 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8948665857315063
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 5 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 5 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06963390111923218
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 5 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 6 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0020923507399857044
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 6 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 6 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10159686207771301
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 6 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 6 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.020690705627202988
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 6 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 6 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.46205294132232666
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 6 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 6 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05488424003124237
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 6 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 6 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5065304040908813
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 6 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 6 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7813915014266968
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 6 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 6 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5996768474578857
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 6 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 6 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.251645803451538
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 6 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 6 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22770041227340698
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 6 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 6 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013136057183146477
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 6 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 6 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8189827799797058
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 6 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 6 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06577762961387634
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 6 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 6 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.8339784145355225
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 6 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 6 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.050556402653455734
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 6 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 7 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005318360403180122
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 7 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 7 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04845258593559265
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 7 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 7 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013250133022665977
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 7 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 7 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2825656533241272
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 7 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 7 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.032042063772678375
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 7 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 7 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9075149297714233
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 7 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 7 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4493677020072937
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 7 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 7 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7660539746284485
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 7 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 7 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.3327610492706299
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 7 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 7 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.25495022535324097
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 7 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 7 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00990347471088171
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 7 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 7 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15063413977622986
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 7 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 7 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.047005943953990936
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 7 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 7 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.7045514583587646
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 7 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 7 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08020336925983429
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 7 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 8 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003067618701606989
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 8 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 8 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09466700255870819
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 8 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 8 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0033400128595530987
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 8 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 8 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0734316036105156
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 8 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 8 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002621158491820097
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 8 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 8 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10898447036743164
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 8 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 8 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04307345300912857
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 8 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 8 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07488130033016205
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 8 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 8 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.24231307208538055
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 8 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 8 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09890250861644745
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 8 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 8 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008198430761694908
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 8 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 8 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10183766484260559
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 8 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 8 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008757615461945534
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 8 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 8 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14656060934066772
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 8 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 8 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005050511099398136
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 8 | train 22 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 8]) | epoch 9 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.000649435562081635
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 8]) | epoch 9 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 8]) | epoch 9 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008319618180394173
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 8]) | epoch 9 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 8]) | epoch 9 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004285808652639389
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 8]) | epoch 9 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 8]) | epoch 9 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02552035078406334
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 8]) | epoch 9 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 8]) | epoch 9 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00414273701608181
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 8]) | epoch 9 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 8]) | epoch 9 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14057445526123047
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 8]) | epoch 9 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 8]) | epoch 9 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08029262721538544
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 8]) | epoch 9 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 8]) | epoch 9 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04919127747416496
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 8]) | epoch 9 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 8]) | epoch 9 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1882191300392151
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 8]) | epoch 9 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 8]) | epoch 9 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06684431433677673
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 8]) | epoch 9 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 8]) | epoch 9 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004250883124768734
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 8]) | epoch 9 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 8]) | epoch 9 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06088056415319443
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 8]) | epoch 9 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 8]) | epoch 9 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012281554751098156
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 8]) | epoch 9 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 8]) | epoch 9 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8]) | mask ~ torch.Size([16, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2972862124443054
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 8]) | epoch 9 | train 22 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([4, 1, 8]) | epoch 9 | train 23 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([4, 1, 8]) | batch_masks~torch.Size([4, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([4, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] mask~torch.Size([4, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([4, 8])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([4, 1, 8]) | batch_masks ~ torch.Size([4, 8]) | mask ~ torch.Size([4, 8])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([4, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([4, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([4, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([4, 1, 8]) | o~torch.Size([4, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([4, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([4, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([4, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01485457830131054
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([4, 1, 8]) | epoch 9 | train 23 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8] [91m [ fine_tune_moment_train_ ] Best epoch: 9[0m
[8] [fine_tune_moment_train_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581257.1276023 | End: 1738581305.3167117 | Duration: 48.19 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Eval Post | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002995637711137533
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0049626766704022884
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010691446252167225
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01714569330215454
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00691052433103323
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.037002213299274445
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0322553813457489
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 8]) | batch_masks~torch.Size([16, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 8]) | batch_masks ~ torch.Size([16, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] mask~torch.Size([16, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 8]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05718304216861725
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 8]) | batch_masks~torch.Size([2, 8]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 8]) | batch_masks ~ torch.Size([2, 8])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 8])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] mask~torch.Size([2, 8])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 8])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 8]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 8]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 8]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 8]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 8]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 8]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 8]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0025618448853492737
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([2, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.11753679080282925, 'rmse': 0.020857457843818095, 'mae': 0.06770042839657085, 'smape': 0.4362147468402311, 'loss': 0.01907871777398719}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581305.317908 | End: 1738581309.8449488 | Duration: 4.53 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single_ | Evaluation summary
[8]  [ fine_tune_moment_single_ ] Eval pre: 
2025-02-03 11:15:09.919 | mse: 0.0466742784379702
2025-02-03 11:15:09.920 | rmse: 0.002372516539817199
2025-02-03 11:15:09.920 | mae: 0.024573392572794825
2025-02-03 11:15:09.920 | smape: 0.18259319015401002
2025-02-03 11:15:09.920 | loss: 0.00217630333888034
[8]  [ fine_tune_moment_single_ ] Eval post: 
2025-02-03 11:15:09.921 | mse: 0.11753679080282925
2025-02-03 11:15:09.921 | rmse: 0.020857457843818095
2025-02-03 11:15:09.922 | mae: 0.06770042839657085
2025-02-03 11:15:09.922 | smape: 0.4362147468402311
2025-02-03 11:15:09.922 | loss: 0.01907871777398719
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ set_fine_tune_ ] best_epoch: [0m
[8] [91m [ set_fine_tune_ ] Processing wlen 10 | wlens [8] | i 2/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (431, 1, 10)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (10, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 130
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 5[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 426[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([130, 1, 10])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 431[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 130 | 130[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [  5   6   7   8  11  13  20  24  29  33  36  41  44  46  47  48  49  52
  54  56  58  59  63  65  83  86  88  90  92  95 102 103 106 110 111 117
 120 122 127 131 136 137 138 140 141 142 144 147 156 169 171 174 175 177
 178 180 190 193 195 197 200 201 206 210 216 220 229 230 235 240 253 254
 257 258 259 273 276 278 281 289 292 293 294 299 301 305 307 310 314 315
 316 322 323 324 328 329 332 335 336 338 340 344 346 347 349 350 351 354
 355 356 358 361 363 370 371 378 386 387 394 398 401 403 410 411 412 415
 420 422 424 426] for case (10, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 226
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 226[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 300[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([226, 1, 10])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 301[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 226 | 226[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [  5   6   7   8  11  13  20  24  29  33  36  41  44  46  47  48  49  52
  54  56  58  59  63  65  83  86  88  90  92  95 102 103 106 110 111 117
 120 122 127 131 136 137 138 140 141 142 144 147 156 169 171 174 175 177
 178 180 190 193 195 197 200 201 206 210 216 220 229 230 235 240 253 254
 257 258 259 273 276 278 281 289 292 293 294 299 301 305 307 310 314 315
 316 322 323 324 328 329 332 335 336 338 340 344 346 347 349 350 351 354
 355 356 358 361 363 370 371 378 386 387 394 398 401 403 410 411 412 415
 420 422 424 426] for case (10, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 10 | Lengths list: [8, 10]
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 10
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 10])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 15
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 0 | train 0 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0008770337444730103
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 0 | train 0 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 0 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01875997707247734
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 0 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 0 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007805974688380957
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 0 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 0 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06616266816854477
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 0 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 0 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07644864916801453
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 0 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 0 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007608067709952593
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 0 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 0 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1254609227180481
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 0 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 0 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019134512171149254
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 0 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 0 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2647032141685486
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 0 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 0 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007954588159918785
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 0 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 0 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1465509533882141
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 0 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 0 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.059817247092723846
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 0 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 0 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008596792817115784
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 0 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 0 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.21071645617485046
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 0 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 0 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006192772649228573
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 0 | train 14 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 1 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003737092949450016
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 1 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 1 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.020503487437963486
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 1 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 1 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006078050471842289
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 1 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 1 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03571340814232826
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 1 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 1 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06916717439889908
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 1 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 1 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013575446791946888
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 1 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 1 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12126557528972626
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 1 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 1 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0047459774650633335
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 1 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 1 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1546066403388977
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 1 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 1 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004666968248784542
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 1 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 1 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08547259867191315
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 1 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 1 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03892786055803299
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 1 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 1 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006167565938085318
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 1 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 1 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1989181488752365
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 1 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 1 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004803854506462812
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 1 | train 15 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 2 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0010313487146049738
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 2 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 2 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010969225317239761
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 2 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 2 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002938025165349245
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 2 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 2 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05201927572488785
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 2 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 2 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06450609117746353
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 2 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 2 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004364915192127228
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 2 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 2 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1067875474691391
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 2 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 2 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005630518309772015
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 2 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 2 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12102533876895905
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 2 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 2 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0018486394546926022
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 2 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 2 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16517551243305206
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 2 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 2 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05767414718866348
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 2 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 2 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004552650265395641
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 2 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 2 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1608777642250061
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 2 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 2 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006373642943799496
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 2 | train 16 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 3 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0006830478087067604
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 3 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 3 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0075927842408418655
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 3 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 3 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005295651964843273
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 3 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 3 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.056482959538698196
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 3 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 3 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07959719747304916
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 3 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 3 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006838510744273663
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 3 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 3 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16665898263454437
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 3 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 3 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0073937419801950455
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 3 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 3 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12715551257133484
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 3 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 3 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0035739652812480927
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 3 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 3 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06503824889659882
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 3 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 3 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04288414865732193
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 3 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 3 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006496507208794355
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 3 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 3 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1607094705104828
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 3 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 3 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0070105670019984245
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 3 | train 17 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 4 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0009116193396039307
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 4 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 4 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011253025382757187
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 4 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 4 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005913906265050173
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 4 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 4 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.022414371371269226
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 4 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 4 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06175239011645317
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 4 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 4 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0035252668894827366
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 4 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 4 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04788590222597122
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 4 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 4 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014544057194143534
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 4 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 4 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11269227415323257
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 4 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 4 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0029165646992623806
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 4 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 4 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09750248491764069
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 4 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 4 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05783413350582123
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 4 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 4 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003284070175141096
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 4 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 4 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08782568573951721
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 4 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 4 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008277324959635735
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 4 | train 18 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 5 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.000363276747521013
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 5 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 5 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008373592048883438
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 5 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 5 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004362133331596851
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 5 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 5 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.056018270552158356
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 5 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 5 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1456390917301178
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 5 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 5 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004522399045526981
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 5 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 5 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06401264667510986
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 5 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 5 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0024380506947636604
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 5 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 5 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03318750113248825
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 5 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 5 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014719904866069555
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 5 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 5 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11383894830942154
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 5 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 5 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04062306135892868
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 5 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 5 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003341791918501258
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 5 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 5 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04669400304555893
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 5 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 5 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0031523527577519417
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 5 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 6 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0004195544752292335
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 6 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 6 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00543634919449687
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 6 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 6 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0036368765868246555
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 6 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 6 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.031244104728102684
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 6 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 6 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04071073234081268
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 6 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 6 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003215378150343895
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 6 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 6 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.046234726905822754
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 6 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 6 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014632197562605143
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 6 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 6 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05920211225748062
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 6 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 6 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005505569279193878
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 6 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 6 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09024691581726074
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 6 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 6 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012525568716228008
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 6 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 6 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006614765152335167
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 6 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 6 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05630828067660332
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 6 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 6 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004040196537971497
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 6 | train 20 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 7 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00032456708140671253
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 7 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 7 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00578985596075654
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 7 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 7 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004109642002731562
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 7 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 7 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.034536466002464294
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 7 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 7 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04424671456217766
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 7 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 7 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004087324254214764
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 7 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 7 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05356162041425705
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 7 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 7 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003548028878867626
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 7 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 7 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09857192635536194
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 7 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 7 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0010849286336451769
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 7 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 7 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.059702374041080475
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 7 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 7 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.024574320763349533
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 7 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 7 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005117995198816061
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 7 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 7 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12989526987075806
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 7 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 7 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0021982002072036266
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 7 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 8 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00029117619851604104
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 8 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 8 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007322348654270172
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 8 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 8 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0077886199578642845
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 8 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 8 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04830734804272652
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 8 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 8 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09030205011367798
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 8 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 8 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006954394280910492
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 8 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 8 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10931624472141266
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 8 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 8 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004902907647192478
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 8 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 8 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1566317081451416
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 8 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 8 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0010720938444137573
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 8 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 8 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10903292149305344
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 8 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 8 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0348108634352684
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 8 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 8 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007300547324120998
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 8 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 8 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2686975598335266
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 8 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 8 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0035005989484488964
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 8 | train 22 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 10]) | epoch 9 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0007514937897212803
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 10]) | epoch 9 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 10]) | epoch 9 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012476272881031036
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 10]) | epoch 9 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 10]) | epoch 9 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00931135006248951
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 10]) | epoch 9 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 10]) | epoch 9 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12303105741739273
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 10]) | epoch 9 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 10]) | epoch 9 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17583245038986206
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 10]) | epoch 9 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 10]) | epoch 9 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.015238146297633648
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 10]) | epoch 9 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 10]) | epoch 9 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6134863495826721
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 10]) | epoch 9 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 10]) | epoch 9 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011474746279418468
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 10]) | epoch 9 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 10]) | epoch 9 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12215255200862885
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 10]) | epoch 9 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 10]) | epoch 9 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004678701050579548
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 10]) | epoch 9 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 10]) | epoch 9 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7434061765670776
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 10]) | epoch 9 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 10]) | epoch 9 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20894648134708405
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 10]) | epoch 9 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 10]) | epoch 9 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01111193373799324
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 10]) | epoch 9 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 10]) | epoch 9 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10]) | mask ~ torch.Size([16, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.27669239044189453
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 10]) | epoch 9 | train 22 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([2, 1, 10]) | epoch 9 | train 23 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10]) | mask ~ torch.Size([2, 10])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006621617823839188
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([2, 1, 10]) | epoch 9 | train 23 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best epoch: 6[0m
[8] [fine_tune_moment_train_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581310.298037 | End: 1738581360.7592218 | Duration: 50.46 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Eval Post | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0010100468061864376
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0015676083276048303
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0015394894871860743
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005868462845683098
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005611056927591562
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.007368968799710274
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012291820719838142
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 10]) | batch_masks~torch.Size([16, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 10]) | batch_masks ~ torch.Size([16, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] mask~torch.Size([16, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 10]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009201403707265854
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([2, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([2, 10]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([2, 1, 10]) | batch_masks~torch.Size([2, 10]).
[8]  [ moment_set_masks ] batch ~ torch.Size([2, 1, 10]) | batch_masks ~ torch.Size([2, 10])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([2, 1, 10])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] mask~torch.Size([2, 10])
[8]  [ moment_set_masks ] batch_masks~torch.Size([2, 10])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([2, 10]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([2, 10]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([2, 1, 10]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([2, 1, 10]) | o~torch.Size([2, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([2, 1, 10]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([2, 10]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([2, 10]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0006543842609971762
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([2, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([2, 1, 10])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([2, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([2, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.0688369645691179, 'rmse': 0.005481926852039704, 'mae': 0.04175285441451706, 'smape': 0.3328728787412092, 'loss': 0.005012582431340383}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581360.7607212 | End: 1738581365.5415802 | Duration: 4.78 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single_ | Evaluation summary
[8]  [ fine_tune_moment_single_ ] Eval post: 
2025-02-03 11:16:05.613 | mse: 0.0688369645691179
2025-02-03 11:16:05.614 | rmse: 0.005481926852039704
2025-02-03 11:16:05.614 | mae: 0.04175285441451706
2025-02-03 11:16:05.614 | smape: 0.3328728787412092
2025-02-03 11:16:05.614 | loss: 0.005012582431340383
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] best_epoch: [0m
[8] [91m [ set_fine_tune_ ] Processing wlen 12 | wlens [8, 10] | i 3/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (429, 1, 12)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (12, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 129
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 129[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 1[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 427[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([129, 1, 12])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 429[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 129 | 129[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [  1   6   7  20  22  27  31  35  40  43  48  49  50  52  53  55  69  70
  73  76  79  87  91  93  95  98 106 107 108 110 113 117 119 120 133 137
 138 141 142 144 151 153 156 160 163 165 166 170 173 174 175 176 177 180
 181 182 184 187 194 199 202 203 206 207 208 214 215 217 218 222 224 226
 227 230 233 234 237 240 242 244 247 259 260 263 273 274 282 284 287 290
 294 302 303 304 306 309 314 316 317 329 331 336 338 344 346 347 355 358
 363 368 369 370 378 381 387 390 398 400 404 405 407 409 411 413 416 417
 418 424 427] for case (12, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 225
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 225[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 299[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([225, 1, 12])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 300[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 225 | 225[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [  1   6   7  20  22  27  31  35  40  43  48  49  50  52  53  55  69  70
  73  76  79  87  91  93  95  98 106 107 108 110 113 117 119 120 133 137
 138 141 142 144 151 153 156 160 163 165 166 170 173 174 175 176 177 180
 181 182 184 187 194 199 202 203 206 207 208 214 215 217 218 222 224 226
 227 230 233 234 237 240 242 244 247 259 260 263 273 274 282 284 287 290
 294 302 303 304 306 309 314 316 317 329 331 336 338 344 346 347 355 358
 363 368 369 370 378 381 387 390 398 400 404 405 407 409 411 413 416 417
 418 424 427] for case (12, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 12 | Lengths list: [8, 10, 12]
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 12
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 12])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 15
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 0 | train 0 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.000195216343854554
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 0 | train 0 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 0 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02179110050201416
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 0 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 0 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0061513460241258144
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 0 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 0 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1975162774324417
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 0 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 0 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3945419490337372
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 0 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 0 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.23587827384471893
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 0 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 0 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3160881996154785
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 0 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 0 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.45472967624664307
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 0 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 0 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002202976029366255
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 0 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 0 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08256262540817261
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 0 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 0 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13277707993984222
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 0 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 0 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5325754880905151
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 0 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 0 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03697939217090607
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 0 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 0 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6199173927307129
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 0 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 0 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00275641237385571
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 0 | train 14 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 1 | train 1 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0026371311396360397
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 1 | train 1 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 1 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13603782653808594
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 1 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 1 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019218726083636284
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 1 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 1 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5153886079788208
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 1 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 1 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7636334300041199
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 1 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 1 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3621644973754883
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 1 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 1 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6733778119087219
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 1 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 1 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.272094249725342
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 1 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 1 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008510105311870575
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 1 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 1 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6437259316444397
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 1 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 1 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20403890311717987
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 1 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 1 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.9850425720214844
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 1 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 1 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08890887349843979
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 1 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 1 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9987242221832275
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 1 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 1 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005669416394084692
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 1 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 2 | train 2 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011746782809495926
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 2 | train 2 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 2 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20062513649463654
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 2 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 2 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.044282034039497375
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 2 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 2 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.915276825428009
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 2 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 2 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9762464165687561
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 2 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 2 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9754697680473328
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 2 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 2 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.856468439102173
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 2 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 2 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.160639524459839
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 2 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 2 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.016915379092097282
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 2 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 2 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7369982600212097
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 2 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 2 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19728796184062958
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 2 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 2 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.6113522052764893
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 2 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 2 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2549034059047699
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 2 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 2 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.434694290161133
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 2 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 2 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04705493152141571
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 2 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 3 | train 3 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004946188535541296
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 3 | train 3 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 3 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2308059185743332
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 3 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 3 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.025185396894812584
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 3 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 3 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7615888118743896
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 3 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 3 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1015267372131348
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 3 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 3 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.965523898601532
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 3 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 3 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.064676284790039
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 3 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 3 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.868500709533691
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 3 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 3 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05314028263092041
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 3 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 3 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.6643930673599243
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 3 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 3 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3965790271759033
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 3 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 3 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.259714126586914
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 3 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 3 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14393365383148193
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 3 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 3 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.0631649494171143
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 3 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 3 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11383990198373795
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 3 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 4 | train 4 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003058098955079913
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 4 | train 4 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 4 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14998778700828552
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 4 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 4 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011453387327492237
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 4 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 4 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.38995060324668884
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 4 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 4 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5611871480941772
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 4 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 4 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4528213441371918
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 4 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 4 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8306303024291992
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 4 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 4 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.4198379516601562
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 4 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 4 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.042596299201250076
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 4 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 4 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6215136647224426
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 4 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 4 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08472410589456558
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 4 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 4 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.3102871179580688
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 4 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 4 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14049941301345825
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 4 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 4 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.4065768718719482
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 4 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 4 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.023950820788741112
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 4 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 5 | train 5 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00218449835665524
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 5 | train 5 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 5 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04907849431037903
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 5 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 5 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006067083682864904
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 5 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 5 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18490172922611237
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 5 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 5 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.424894243478775
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 5 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 5 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2545793950557709
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 5 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 5 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6441282033920288
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 5 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 5 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.7923856973648071
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 5 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 5 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.019384650513529778
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 5 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 5 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.28202515840530396
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 5 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 5 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0636179968714714
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 5 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 5 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7422254085540771
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 5 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 5 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.050045568495988846
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 5 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 5 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7044775485992432
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 5 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 5 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02130766771733761
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 5 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 6 | train 6 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002930428832769394
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 6 | train 6 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 6 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.025106826797127724
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 6 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 6 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0037997851613909006
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 6 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 6 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1028997078537941
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 6 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 6 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13002894818782806
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 6 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 6 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10441980510950089
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 6 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 6 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16039212048053741
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 6 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 6 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8331764340400696
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 6 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 6 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00552709586918354
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 6 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 6 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3961091935634613
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 6 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 6 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09094282984733582
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 6 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 6 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7007390856742859
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 6 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 6 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.044405728578567505
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 6 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 6 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.46562090516090393
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 6 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 6 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0027373756747692823
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 6 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 7 | train 7 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0025121935177594423
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 7 | train 7 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 7 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06227704510092735
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 7 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 7 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0035146039444953203
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 7 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 7 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09888436645269394
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 7 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 7 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14476048946380615
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 7 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 7 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1568598449230194
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 7 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 7 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2755245268344879
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 7 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 7 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0163278579711914
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 7 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 7 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006083567161113024
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 7 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 7 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2946532368659973
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 7 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 7 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1506623923778534
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 7 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 7 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9885322451591492
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 7 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 7 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03320680931210518
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 7 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 7 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6168956756591797
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 7 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 7 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003900564042851329
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 7 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 8 | train 8 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.001337692723609507
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 8 | train 8 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 8 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.030261704698204994
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 8 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 8 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.004228980280458927
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 8 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 8 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15975582599639893
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 8 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 8 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16467927396297455
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 8 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 8 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17942099273204803
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 8 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 8 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3448260724544525
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 8 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 8 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1868548393249512
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 8 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 8 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.009418285451829433
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 8 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 8 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14461202919483185
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 8 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 8 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0512191466987133
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 8 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 8 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7069351077079773
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 8 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 8 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.051230739802122116
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 8 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 8 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1211397647857666
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 8 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 8 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.010332979261875153
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 8 | train 22 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 12]) | epoch 9 | train 9 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0009420991991646588
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 12]) | epoch 9 | train 9 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 12]) | epoch 9 | train 10 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03188633546233177
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 12]) | epoch 9 | train 10 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 12]) | epoch 9 | train 11 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005943166557699442
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 12]) | epoch 9 | train 11 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 12]) | epoch 9 | train 12 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18687725067138672
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 12]) | epoch 9 | train 12 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 12]) | epoch 9 | train 13 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3514859676361084
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 12]) | epoch 9 | train 13 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 12]) | epoch 9 | train 14 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20950967073440552
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 12]) | epoch 9 | train 14 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 12]) | epoch 9 | train 15 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5174275636672974
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 12]) | epoch 9 | train 15 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 12]) | epoch 9 | train 16 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.8302510976791382
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 12]) | epoch 9 | train 16 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 12]) | epoch 9 | train 17 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01956843212246895
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 12]) | epoch 9 | train 17 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 12]) | epoch 9 | train 18 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3127986788749695
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 12]) | epoch 9 | train 18 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 12]) | epoch 9 | train 19 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19135110080242157
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 12]) | epoch 9 | train 19 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 12]) | epoch 9 | train 20 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5634154081344604
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 12]) | epoch 9 | train 20 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 12]) | epoch 9 | train 21 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.05589894577860832
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 12]) | epoch 9 | train 21 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([16, 1, 12]) | epoch 9 | train 22 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12]) | mask ~ torch.Size([16, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.4402621984481812
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([16, 1, 12]) | epoch 9 | train 22 of 150 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 14 ~ torch.Size([1, 1, 12]) | epoch 9 | train 23 of 150 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12]) | mask ~ torch.Size([1, 12])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03335176035761833
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 14 ~ torch.Size([1, 1, 12]) | epoch 9 | train 23 of 150 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best epoch: 0[0m
[8] [fine_tune_moment_train_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581365.9959898 | End: 1738581418.0104802 | Duration: 52.01 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Eval Post | wlen 8
[8]  [ fine_tune_moment_single_ ] Start timer
[8] [ --> fine_tune_moment_single_ ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02097005397081375
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0311831533908844
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.034785494208335876
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.07815591990947723
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008750878274440765
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1409876048564911
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12064597755670547
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([16, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([16, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 12]) | batch_masks~torch.Size([16, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 12]) | batch_masks ~ torch.Size([16, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] mask~torch.Size([16, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 12]) | o~torch.Size([16, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6816922426223755
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([16, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([16, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([16, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([16, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [ --> fine_tune_moment_eval_step_ ]
[8] [ --> moment_set_masks ]
[8] [91m [ moment_set_masks ] Invalid batch masks shape torch.Size([1, 8]).[0m
[8] [91m [ moment_set_masks ] Modified to torch.Size([1, 12]) adding 0's.[0m
[8]  [ moment_set_masks ] batch~torch.Size([1, 1, 12]) | batch_masks~torch.Size([1, 12]).
[8]  [ moment_set_masks ] batch ~ torch.Size([1, 1, 12]) | batch_masks ~ torch.Size([1, 12])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([1, 1, 12])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] mask~torch.Size([1, 12])
[8]  [ moment_set_masks ] batch_masks~torch.Size([1, 12])
[8] [moment_set_masks --> ]
[8] [91m [ fine_tune_moment_single_ ] Executing in devicecuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([1, 12]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([1, 12]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([1, 1, 12]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_single_ ] Output is not None
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([1, 1, 12]) | o~torch.Size([1, 1, 8])
[8]  [ moment_compute_loss ] batch ~ torch.Size([1, 1, 12]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([1, 12]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([1, 12]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04226800054311752
[8] [moment_compute_loss --> ]
[8] [ --> fine_tune_moment_eval_preprocess ]
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | preds~torch.Size([1, 1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] Before reshape | refs~torch.Size([1, 1, 12])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | preds~torch.Size([1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After reshape | refs~torch.Size([1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | preds~torch.Size([1, 8])
[8]  [ fine_tune_moment_eval_preprocess ] After NaN | refs~torch.Size([1, 8])
[8] [fine_tune_moment_eval_preprocess --> ]
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ fine_tune_moment_single_ ] Eval results: {'mse': 0.3085539207889261, 'rmse': 0.1388915435031689, 'mae': 0.18527612747857347, 'smape': 0.8152822343776661, 'loss': 0.12882659170362684}.[0m
[8] [fine_tune_moment_single_ --> ]
[8]  [ fine_tune_moment_single_ ] End timer -->
[8]  [ fine_tune_moment_single_ ] Start: 1738581418.012301 | End: 1738581422.8022182 | Duration: 4.79 seconds
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single_ | Evaluation summary
[8]  [ fine_tune_moment_single_ ] Eval post: 
2025-02-03 11:17:02.873 | mse: 0.3085539207889261
2025-02-03 11:17:02.874 | rmse: 0.1388915435031689
2025-02-03 11:17:02.874 | mae: 0.18527612747857347
2025-02-03 11:17:02.874 | smape: 0.8152822343776661
2025-02-03 11:17:02.875 | loss: 0.12882659170362684
[8] [fine_tune_moment_single_ --> ]
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] Eval post: [0m
[8] [91m [ set_fine_tune_ ] best_epoch: [0m
[8] [91m [ set_fine_tune_ ] Processing wlen 16 | wlens [8, 10, 12] | i 4/5[0m
[8] [ --> fine_tune_moment_single_ ]
[8]  [ fine_tune_moment_single_ ] fine_tune_moment_single | Prepare the dataset | X ~ (425, 1, 16)
[8] [ --> set_train_and_eval_dataloaders ]
[8]  [ set_train_and_eval_dataloaders ] Computing indices for case = (16, 0.3, None, None)
[8]  [ set_train_and_eval_dataloaders ] Selecting validation dataset | windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 128
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 128[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 1[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 419[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([128, 1, 16])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 425[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 128 | 128[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices [  1   4   6   7  10  11  22  23  30  43  47  53  56  66  70  71  72  74
  75  76  77  78  81  83  90  91  92  93  96  99 101 103 104 106 108 114
 118 120 124 126 131 133 134 135 137 142 143 146 149 157 168 169 175 185
 188 189 194 196 201 205 208 209 213 215 217 220 222 223 227 230 231 232
 234 242 244 245 249 256 259 262 267 269 271 272 276 277 286 291 292 296
 298 302 303 305 310 316 318 326 332 334 338 341 344 345 350 352 353 354
 357 359 360 362 374 376 378 379 390 394 395 396 400 403 406 408 411 413
 416 419] for case (16, 0.3, None, None)[0m
[8]  [ set_train_and_eval_dataloaders ] Train DataLoader | Random windows
[8] [ --> random_windows ]
[8]  [ set_train_and_eval_dataloaders ] N windows: 223
[8] [91m [ set_train_and_eval_dataloaders ] n_windows: 223[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (smallest): 0[0m
[8] [91m [ set_train_and_eval_dataloaders ] Index (largest): 296[0m
[8]  [ set_train_and_eval_dataloaders ] windows~torch.Size([223, 1, 16])
[8] [set_train_and_eval_dataloaders --> ]
[8] [91m [ set_train_and_eval_dataloaders ] Total: 297[0m
[8] [91m [ set_train_and_eval_dataloaders ] Eval: 223 | 223[0m
[8] [91m [ set_train_and_eval_dataloaders ] Saved indices after train dataset [  1   4   6   7  10  11  22  23  30  43  47  53  56  66  70  71  72  74
  75  76  77  78  81  83  90  91  92  93  96  99 101 103 104 106 108 114
 118 120 124 126 131 133 134 135 137 142 143 146 149 157 168 169 175 185
 188 189 194 196 201 205 208 209 213 215 217 220 222 223 227 230 231 232
 234 242 244 245 249 256 259 262 267 269 271 272 276 277 286 291 292 296
 298 302 303 305 310 316 318 326 332 334 338 341 344 345 350 352 353 354
 357 359 360 362 374 376 378 379 390 394 395 396 400 403 406 408 411 413
 416 419] for case (16, 0.3, None, None)[0m
[8] [set_train_and_eval_dataloaders --> ]
[8]  [ fine_tune_moment_single_ ] Processing wlen 16 | Lengths list: [8, 10, 12, 16]
[8]  [ fine_tune_moment_single_ ] Start timer
[8]  [ fine_tune_moment_single_ ] Train | wlen 16
[8] [ --> fine_tune_moment_train_ ]
[8]  [ fine_tune_moment_train_ ] Training loop
[8]  [ fine_tune_moment_train_ ] Fine tune loop | batch_masks~torch.Size([16, 16])
[8]  [ fine_tune_moment_train_ ] num_epochs 10 | n_batches 14
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 0 | train 0 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0026865447871387005
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 0 | train 0 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 0 | train 1 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0935765877366066
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 0 | train 1 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 0 | train 2 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.039910756051540375
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 0 | train 2 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 0 | train 3 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04988056421279907
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 0 | train 3 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 0 | train 4 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1962459683418274
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 0 | train 4 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 0 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.014796535484492779
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 0 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 0 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.31864917278289795
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 0 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 0 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1448693871498108
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 0 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 0 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.154541254043579
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 0 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 0 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.035894669592380524
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 0 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 0 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1605219542980194
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 0 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 0 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.33533626794815063
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 0 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 0 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.034379102289676666
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 0 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 0 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5753875970840454
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 0 | train 13 of 140 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 1 | train 1 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0016743135638535023
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 1 | train 1 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 1 | train 2 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10958734154701233
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 1 | train 2 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 1 | train 3 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1080036386847496
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 1 | train 3 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 1 | train 4 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.571648359298706
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 1 | train 4 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 1 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.492081880569458
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 1 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 1 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09965348243713379
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 1 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 1 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.9555513858795166
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 1 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 1 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8121423721313477
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 1 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 1 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6823544502258301
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 1 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 1 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20233087241649628
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 1 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 1 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8712151050567627
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 1 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 1 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.3055330514907837
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 1 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 1 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.15297174453735352
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 1 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 1 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.487520933151245
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 1 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 2 | train 2 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.002277512103319168
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 2 | train 2 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 2 | train 3 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.24898383021354675
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 2 | train 3 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 2 | train 4 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2576540410518646
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 2 | train 4 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 2 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.7904766201972961
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 2 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 2 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 2.725733518600464
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 2 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 2 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1703788936138153
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 2 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 2 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.189721584320068
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 2 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 2 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.8155944347381592
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 2 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 2 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9766942262649536
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 2 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 2 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19700056314468384
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 2 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 2 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4310062527656555
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 2 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 2 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.7931318283081055
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 2 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 2 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3569539785385132
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 2 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 2 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 13.761393547058105
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 2 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 3 | train 3 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.005796157754957676
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 3 | train 3 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 3 | train 4 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16254481673240662
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 3 | train 4 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 3 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.2997916340827942
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 3 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 3 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1114869117736816
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 3 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 3 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 4.810309410095215
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 3 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 3 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3980104923248291
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 3 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 3 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 12.010882377624512
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 3 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 3 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.795389175415039
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 3 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 3 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 9.30182933807373
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 3 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 3 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1700108051300049
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 3 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 3 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.0985491275787354
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 3 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 3 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.5986835956573486
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 3 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 3 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8834570050239563
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 3 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 3 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 28.51394271850586
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 3 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 4 | train 4 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03528305143117905
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 4 | train 4 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 4 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5849177837371826
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 4 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 4 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1905689686536789
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 4 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 4 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5397316217422485
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 4 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 4 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.8111908435821533
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 4 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 4 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1815861165523529
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 4 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 4 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.146700859069824
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 4 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 4 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.433609962463379
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 4 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 4 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 7.28016471862793
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 4 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 4 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9162877798080444
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 4 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 4 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.5472644567489624
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 4 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 4 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.8344964981079102
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 4 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 4 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.19646529853343964
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 4 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 4 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 11.059979438781738
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 4 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 5 | train 5 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.012796361930668354
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 5 | train 5 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 5 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.18144157528877258
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 5 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 5 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0863838940858841
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 5 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 5 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4082125127315521
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 5 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 5 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.5881154537200928
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 5 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 5 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12290255725383759
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 5 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 5 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 5.214865684509277
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 5 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 5 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.874147653579712
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 5 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 5 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 3.5720934867858887
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 5 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 5 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6221582889556885
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 5 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 5 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11855198442935944
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 5 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 5 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4520564675331116
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 5 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 5 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.13357436656951904
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 5 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 5 | train 18 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 9.785261154174805
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 5 | train 18 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 6 | train 6 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.00898473896086216
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 6 | train 6 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 6 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.09704146534204483
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 6 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 6 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.026619959622621536
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 6 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 6 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.16304543614387512
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 6 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 6 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1567714810371399
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 6 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 6 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.015759442001581192
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 6 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 6 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.1638703346252441
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 6 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 6 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6951617002487183
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 6 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 6 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 1.060715913772583
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 6 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 6 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3325118124485016
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 6 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 6 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10539577901363373
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 6 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 6 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3218208849430084
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 6 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 6 | train 18 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.03402913361787796
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 6 | train 18 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 6 | train 19 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.9327036142349243
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 6 | train 19 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 7 | train 7 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0025992407463490963
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 7 | train 7 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 7 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11422841250896454
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 7 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 7 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.027594830840826035
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 7 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 7 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.08342321217060089
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 7 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 7 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.17142033576965332
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 7 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 7 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.013258062303066254
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 7 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 7 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.4528551995754242
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 7 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 7 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.20092728734016418
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 7 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 7 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.777583122253418
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 7 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 7 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.11938744783401489
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 7 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 7 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.3326824903488159
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 7 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 7 | train 18 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1086898148059845
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 7 | train 18 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 7 | train 19 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.027875836938619614
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 7 | train 19 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 7 | train 20 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.6279895901679993
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 7 | train 20 of 140 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 8 | train 8 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014453066978603601
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 8 | train 8 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 8 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.04153654724359512
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 8 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 8 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01538166869431734
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 8 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 8 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.02782995067536831
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 8 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 8 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06263913959264755
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 8 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 8 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.006394488271325827
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 8 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 8 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.35831964015960693
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 8 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 8 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.1402205526828766
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 8 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 8 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.14844028651714325
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 8 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 8 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0798536092042923
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 9 ~ torch.Size([16, 1, 16]) | epoch 8 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 10 ~ torch.Size([16, 1, 16]) | epoch 8 | train 18 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.06484456360340118
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 10 ~ torch.Size([16, 1, 16]) | epoch 8 | train 18 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 11 ~ torch.Size([16, 1, 16]) | epoch 8 | train 19 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0729600340127945
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 11 ~ torch.Size([16, 1, 16]) | epoch 8 | train 19 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 12 ~ torch.Size([16, 1, 16]) | epoch 8 | train 20 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.018770862370729446
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 12 ~ torch.Size([16, 1, 16]) | epoch 8 | train 20 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 13 ~ torch.Size([15, 1, 16]) | epoch 8 | train 21 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([15, 1, 16]) | batch_masks~torch.Size([15, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([15, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] mask~torch.Size([15, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([15, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([15, 1, 16]) | batch_masks ~ torch.Size([15, 16]) | mask ~ torch.Size([15, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([15, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([15, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([15, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([15, 1, 16]) | o~torch.Size([15, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([15, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([15, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([15, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.39706796407699585
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 13 ~ torch.Size([15, 1, 16]) | epoch 8 | train 21 of 140 | Loss backward | After loop step 
[8] [91m [ fine_tune_moment_train_ ] Best Loss {best_loss} -> {epoch_loss_mean}[0m
[8]  [ fine_tune_moment_train_ ] batch 0 ~ torch.Size([16, 1, 16]) | epoch 9 | train 9 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0014794983435422182
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 0 ~ torch.Size([16, 1, 16]) | epoch 9 | train 9 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 1 ~ torch.Size([16, 1, 16]) | epoch 9 | train 10 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.01927521824836731
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 1 ~ torch.Size([16, 1, 16]) | epoch 9 | train 10 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 2 ~ torch.Size([16, 1, 16]) | epoch 9 | train 11 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.008629033342003822
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 2 ~ torch.Size([16, 1, 16]) | epoch 9 | train 11 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 3 ~ torch.Size([16, 1, 16]) | epoch 9 | train 12 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.011519132182002068
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 3 ~ torch.Size([16, 1, 16]) | epoch 9 | train 12 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 4 ~ torch.Size([16, 1, 16]) | epoch 9 | train 13 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.0628633052110672
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 4 ~ torch.Size([16, 1, 16]) | epoch 9 | train 13 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 5 ~ torch.Size([16, 1, 16]) | epoch 9 | train 14 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.003312873188406229
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 5 ~ torch.Size([16, 1, 16]) | epoch 9 | train 14 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 6 ~ torch.Size([16, 1, 16]) | epoch 9 | train 15 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.22501066327095032
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 6 ~ torch.Size([16, 1, 16]) | epoch 9 | train 15 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 7 ~ torch.Size([16, 1, 16]) | epoch 9 | train 16 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.10805927217006683
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 7 ~ torch.Size([16, 1, 16]) | epoch 9 | train 16 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 8 ~ torch.Size([16, 1, 16]) | epoch 9 | train 17 of 140 | Before loop step
[8] [ --> fine_tune_moment_train_loop_step_ ]
[8]  [ fine_tune_moment_train_loop_step_ ] Get the masks
[8] [ --> moment_set_masks ]
[8]  [ moment_set_masks ] batch~torch.Size([16, 1, 16]) | batch_masks~torch.Size([16, 16]).
[8]  [ moment_set_masks ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16])
[8]  [ moment_set_masks ] window_mask_percent 0.25 | batch ~ torch.Size([16, 1, 16])
[8]  [ moment_set_masks ] Using mask generator with mask ratio 0.25
[8]  [ moment_set_masks ] Mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] mask~torch.Size([16, 16])
[8]  [ moment_set_masks ] batch_masks~torch.Size([16, 16])
[8] [moment_set_masks --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] batch ~ torch.Size([16, 1, 16]) | batch_masks ~ torch.Size([16, 16]) | mask ~ torch.Size([16, 16])
[8]  [ fine_tune_moment_train_loop_step_ ] Batch device: cuda:1 | mask device: cuda:1 | batch_masks device: cuda:1
[8] [91m [ fine_tune_moment_train_loop_step_ ] Executing in device cuda:1[0m
[8] [ --> moment_safe_forward_pass ]
[8]  [ moment_safe_forward_pass ] cpu | False | device | 1
[8]  [ moment_safe_forward_pass ] Device 1 | input_mask~torch.Size([16, 16]) device: cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | mask device~torch.Size([16, 16]): cuda:1
[8]  [ moment_safe_forward_pass ] Device 1 | batch~torch.Size([16, 1, 16]) device: cuda:1
[8] [91m [ moment_safe_forward_pass ] Using device: 1[0m
[8] [91m [ moment_safe_forward_pass ] CUDA is available: True[0m
[8] [91m [ moment_safe_forward_pass ] Model device: cuda:1[0m
[8] [91m [ moment_safe_forward_pass ] Devices: batch - cuda:1 | input_mask - cuda:1 | mask - cuda:1.[0m
[8]  [ moment_safe_forward_pass ] Computation done | output is None? False
[8] [moment_safe_forward_pass --> ]
[8]  [ fine_tune_moment_train_loop_step_ ] Output correctly obtained, compute loss
[8] [ --> moment_compute_loss ]
[8]  [ moment_compute_loss ] b~torch.Size([16, 1, 16]) | o~torch.Size([16, 1, 16])
[8]  [ moment_compute_loss ] batch ~ torch.Size([16, 1, 16]) | cuda:1
[8]  [ moment_compute_loss ] batch_masks ~ torch.Size([16, 16]) | cuda:1
[8]  [ moment_compute_loss ] mask ~ torch.Size([16, 16]) | cuda:1
[8] [91m [ moment_compute_loss ] Criterion: MSELoss()[0m
[8]  [ moment_compute_loss ] Loss type: <class 'torch.Tensor'>
[8]  [ moment_compute_loss ] loss: 0.12649494409561157
[8] [moment_compute_loss --> ]
[8] [fine_tune_moment_train_loop_step_ --> ]
[8]  [ fine_tune_moment_train_ ] fine_tune_moment_train | batch 8 ~ torch.Size([16, 1, 16]) | epoch 9 | train 17 of 140 | Loss backward | After loop step 
[8]  [ fine_tune_moment_train_ ] batch 9 ~ torch.Size([16, 1, 16]) | epoch 9 | train 18 of 140 | Before loop step
